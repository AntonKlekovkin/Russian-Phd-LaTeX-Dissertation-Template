%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 269 575 522
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 18 Май 2020 г. 11:01:36 VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
924 419 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
924.000 0 l
924.000 419.000 l
0 419.000 l
0 0 l
h
f
0 0 0 RG
2.00000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 914 409 rc
1.00000 w
2 J
0 j
1.50000 w
0 J
1 j
q
Q
1.00000 w
2 J
0 j
1.50000 w
0 J
1 j
q
Q
1.00000 w
2 J
0 j
2.00000 w
0 J
1 j
q
q
279.191 10.9321 355.617 397.067 rc
newpath
487.414 16.9976 m
487.414 16.9860 l
487.404 16.2845 l
487.361 15.2218 l
487.326 14.4474 l
487.323 13.9321 l
487.506 14.3748 l
487.729 15.0848 l
487.921 15.6642 l
488.095 16.1552 l
488.258 16.5831 l
488.414 16.9639 l
488.565 17.3085 l
488.713 17.6246 l
488.866 17.6606 l
489.026 16.8083 l
489.173 16.0321 l
489.323 15.4259 l
489.544 15.3983 l
489.861 16.1685 l
490.153 16.8266 l
490.429 17.3749 l
490.695 17.8501 l
490.956 18.2739 l
491.214 18.6600 l
491.469 19.0178 l
491.724 19.3327 l
492.042 18.8808 l
492.375 18.0286 l
492.693 17.3893 l
493.016 16.9878 l
493.402 17.5525 l
493.786 18.3097 l
494.156 18.9311 l
494.518 19.4683 l
494.877 19.9497 l
495.234 20.3922 l
495.589 20.8067 l
495.942 21.2005 l
496.338 21.2850 l
496.842 20.5201 l
497.327 19.8554 l
497.797 19.3417 l
498.269 19.4492 l
498.736 20.2993 l
499.191 21.0188 l
499.642 21.6369 l
500.090 22.1920 l
500.538 22.7055 l
500.984 23.1905 l
501.429 23.6553 l
501.879 24.0724 l
502.481 23.7050 l
503.133 23.0084 l
503.754 22.5063 l
504.355 22.2518 l
504.908 22.9620 l
505.437 23.8069 l
505.966 24.5234 l
506.495 25.1655 l
507.024 25.7615 l
507.552 26.3275 l
508.079 26.8733 l
508.605 27.4055 l
509.213 27.6005 l
510.009 26.9953 l
510.776 26.5056 l
511.519 26.1479 l
512.195 26.4504 l
512.788 27.4255 l
513.383 28.2591 l
513.982 29.0010 l
514.582 29.6895 l
515.182 30.3453 l
515.782 30.9803 l
516.380 31.6021 l
516.990 32.1683 l
517.835 31.9440 l
518.751 31.4568 l
519.624 31.1423 l
520.454 31.0882 l
521.133 31.9804 l
521.779 32.9549 l
522.435 33.8104 l
523.096 34.6014 l
523.758 35.3552 l
524.419 36.0868 l
525.078 36.8052 l
525.734 37.5160 l
526.517 37.8638 l
527.556 37.4682 l
528.555 37.1968 l
529.523 37.0424 l
530.350 37.5792 l
531.033 38.7106 l
531.732 39.6965 l
532.440 40.6010 l
533.151 41.4613 l
533.862 42.2967 l
534.570 43.1183 l
535.276 43.9328 l
536.002 44.6819 l
537.049 44.6488 l
538.176 44.4115 l
539.253 44.3262 l
540.256 44.5169 l
541.012 45.6195 l
541.735 46.7586 l
542.475 47.7894 l
543.222 48.7655 l
543.969 49.7124 l
544.715 50.6441 l
545.456 51.5687 l
546.191 52.4912 l
547.106 53.0287 l
548.335 52.8886 l
549.514 52.8764 l
550.655 52.9713 l
551.569 53.7771 l
552.294 55.0943 l
553.048 56.2679 l
553.814 57.3703 l
554.583 58.4371 l
556.113 60.5272 l
556.868 61.5667 l
557.658 62.5300 l
558.855 62.7358 l
560.135 62.7905 l
561.359 62.9784 l
562.472 63.4587 l
563.242 64.7996 l
563.985 66.1380 l
564.751 67.3794 l
565.524 68.5751 l
567.063 70.9135 l
567.821 72.0762 l
568.570 73.2414 l
569.561 74.0071 l
570.918 74.1712 l
572.213 74.4633 l
573.462 74.8575 l
574.387 75.9672 l
575.088 77.5000 l
575.829 78.8960 l
576.585 80.2306 l
577.341 81.5371 l
578.093 82.8318 l
578.835 84.1238 l
579.565 85.4184 l
580.348 86.6264 l
581.628 87.1223 l
582.989 87.5153 l
584.288 88.0253 l
585.427 88.8422 l
586.813 92.0187 l
587.525 93.5036 l
588.243 94.9508 l
588.956 96.3822 l
589.659 97.8090 l
590.348 99.2379 l
591.023 100.672 l
592.014 101.705 l
593.417 102.225 l
594.744 102.871 l
596.012 103.617 l
596.845 105.062 l
597.430 106.835 l
598.067 108.484 l
598.717 110.079 l
599.365 111.653 l
600.002 113.219 l
600.624 114.785 l
601.229 116.357 l
601.909 117.835 l
603.179 118.671 l
604.523 119.450 l
605.797 120.331 l
606.849 121.527 l
607.366 123.414 l
607.886 125.241 l
608.434 126.992 l
608.985 128.711 l
609.525 130.419 l
610.050 132.124 l
610.554 133.834 l
611.036 135.550 l
611.923 136.882 l
613.259 137.805 l
614.500 138.848 l
615.663 139.993 l
616.265 141.786 l
616.610 143.810 l
617.014 145.721 l
617.431 147.588 l
617.840 149.435 l
618.232 151.278 l
618.602 153.121 l
618.946 154.969 l
619.397 156.720 l
620.530 157.935 l
621.720 159.133 l
622.830 160.421 l
623.637 162.015 l
623.822 164.172 l
624.031 166.247 l
624.269 168.257 l
624.507 170.238 l
624.728 172.208 l
624.925 174.176 l
625.094 176.145 l
625.236 178.117 l
625.878 179.756 l
626.990 181.105 l
627.988 182.562 l
628.877 184.120 l
629.071 186.228 l
629.016 188.468 l
629.027 190.610 l
629.049 192.711 l
629.058 194.793 l
629.042 196.868 l
628.997 198.940 l
628.919 201.011 l
628.985 202.993 l
629.814 204.585 l
630.674 206.194 l
631.440 207.879 l
631.809 209.831 l
631.485 212.179 l
631.212 214.435 l
630.971 216.632 l
630.725 218.800 l
630.457 220.954 l
630.158 223.100 l
629.824 225.241 l
629.460 227.374 l
629.693 229.270 l
630.394 231.007 l
630.957 232.832 l
631.371 234.745 l
630.968 237.048 l
630.342 239.391 l
629.790 241.649 l
629.248 243.867 l
628.690 246.062 l
628.102 248.243 l
627.478 250.411 l
626.816 252.570 l
626.342 254.662 l
626.685 256.554 l
627.023 258.484 l
627.251 260.469 l
626.981 262.637 l
625.988 265.001 l
625.076 267.274 l
624.202 269.493 l
623.320 271.681 l
622.414 273.845 l
621.474 275.991 l
620.496 278.120 l
619.493 280.230 l
619.163 282.248 l
619.268 284.240 l
619.215 286.289 l
618.968 288.391 l
617.818 290.660 l
616.495 292.888 l
615.257 295.049 l
614.030 297.169 l
612.787 299.258 l
611.514 301.321 l
610.205 303.360 l
608.856 305.374 l
607.739 307.369 l
607.445 309.387 l
607.103 311.446 l
606.638 313.530 l
605.591 315.657 l
603.849 317.763 l
602.223 319.795 l
600.638 321.780 l
599.051 323.727 l
597.442 325.641 l
595.801 327.522 l
594.125 329.372 l
592.438 331.193 l
591.459 333.117 l
590.844 335.134 l
590.058 337.161 l
589.043 339.184 l
587.112 341.099 l
585.076 342.921 l
583.134 344.696 l
581.210 346.430 l
579.276 348.124 l
577.317 349.779 l
575.329 351.396 l
573.309 352.973 l
571.551 354.607 l
570.549 356.500 l
569.461 358.411 l
568.246 360.311 l
566.413 362.062 l
563.983 363.588 l
561.694 365.073 l
559.455 366.521 l
557.222 367.926 l
554.975 369.287 l
552.707 370.603 l
550.414 371.874 l
548.131 373.116 l
546.520 374.687 l
545.169 376.433 l
543.654 378.139 l
541.894 379.755 l
539.304 380.976 l
536.687 382.088 l
534.168 383.176 l
531.678 384.225 l
529.188 385.229 l
526.687 386.183 l
524.170 387.087 l
521.635 387.939 l
519.363 388.950 l
517.701 390.432 l
515.930 391.891 l
514.042 393.297 l
511.575 394.331 l
508.673 394.983 l
505.923 395.642 l
503.230 396.274 l
500.556 396.864 l
497.883 397.404 l
495.204 397.890 l
492.518 398.320 l
489.863 398.736 l
487.753 399.703 l
485.788 400.882 l
483.683 401.970 l
481.353 402.868 l
478.385 403.117 l
475.461 403.276 l
472.635 403.438 l
469.847 403.569 l
467.075 403.652 l
464.309 403.681 l
461.547 403.654 l
458.786 403.569 l
456.244 403.757 l
454.096 404.568 l
451.840 405.304 l
449.490 405.945 l
446.698 406.000 l
443.673 405.590 l
440.790 405.237 l
437.970 404.875 l
435.181 404.474 l
432.412 404.023 l
429.658 403.516 l
426.916 402.953 l
424.219 402.401 l
421.850 402.576 l
419.518 402.952 l
417.090 403.195 l
414.502 403.149 l
411.559 402.284 l
408.707 401.376 l
405.943 400.500 l
403.227 399.602 l
400.543 398.663 l
397.886 397.673 l
395.254 396.629 l
392.646 395.529 l
390.157 394.805 l
387.804 394.767 l
385.372 394.604 l
382.885 394.311 l
380.189 393.271 l
377.463 391.771 l
374.850 390.373 l
372.299 388.982 l
369.794 387.564 l
367.326 386.104 l
364.893 384.596 l
362.495 383.037 l
360.137 381.525 l
357.822 380.827 l
355.466 380.278 l
353.069 379.573 l
350.625 378.506 l
348.159 376.565 l
345.796 374.647 l
343.506 372.783 l
341.269 370.914 l
339.080 369.015 l
336.935 367.077 l
334.835 365.096 l
332.780 363.071 l
330.692 361.487 l
328.483 360.548 l
326.249 359.449 l
324.013 358.199 l
321.866 356.142 l
319.859 353.707 l
317.922 351.404 l
316.042 349.127 l
314.215 346.839 l
312.441 344.524 l
310.719 342.176 l
309.051 339.793 l
307.395 337.492 l
305.472 335.972 l
303.470 334.531 l
301.487 332.932 l
299.610 330.944 l
298.036 328.164 l
296.544 325.467 l
295.102 322.842 l
293.713 320.230 l
292.382 317.606 l
291.108 314.963 l
289.894 312.296 l
288.740 309.604 l
287.364 307.352 l
285.656 305.610 l
283.991 303.701 l
282.388 301.641 l
281.191 298.839 l
S
cliprestore
newpath
0 0 m
0 409.000 l
914.000 409.000 l
914.000 0 l
h
W
Q
q
279.191 10.9321 355.617 397.067 rc
newpath
487.414 16.9976 m
487.414 16.9860 l
487.404 16.2845 l
487.361 15.2218 l
487.326 14.4474 l
487.323 13.9321 l
487.506 14.3748 l
487.729 15.0848 l
487.921 15.6642 l
488.095 16.1552 l
488.258 16.5831 l
488.414 16.9639 l
488.565 17.3085 l
488.713 17.6246 l
488.866 17.6606 l
489.026 16.8083 l
489.173 16.0321 l
489.323 15.4259 l
489.544 15.3983 l
489.861 16.1685 l
490.153 16.8266 l
490.429 17.3749 l
490.695 17.8501 l
490.956 18.2739 l
491.214 18.6600 l
491.469 19.0178 l
491.724 19.3327 l
492.042 18.8808 l
492.375 18.0286 l
492.693 17.3893 l
493.016 16.9878 l
493.402 17.5525 l
493.786 18.3097 l
494.156 18.9311 l
494.518 19.4683 l
494.877 19.9497 l
495.234 20.3922 l
495.589 20.8067 l
495.942 21.2005 l
496.338 21.2850 l
496.842 20.5201 l
497.327 19.8554 l
497.797 19.3417 l
498.269 19.4492 l
498.736 20.2993 l
499.191 21.0188 l
499.642 21.6369 l
500.090 22.1920 l
500.538 22.7055 l
500.984 23.1905 l
501.429 23.6553 l
501.879 24.0724 l
502.481 23.7050 l
503.133 23.0084 l
503.754 22.5063 l
504.355 22.2518 l
504.908 22.9620 l
505.437 23.8069 l
505.966 24.5234 l
506.495 25.1655 l
507.024 25.7615 l
507.552 26.3275 l
508.079 26.8733 l
508.605 27.4055 l
509.213 27.6005 l
510.009 26.9953 l
510.776 26.5056 l
511.519 26.1479 l
512.195 26.4504 l
512.788 27.4255 l
513.383 28.2591 l
513.982 29.0010 l
514.582 29.6895 l
515.182 30.3453 l
515.782 30.9803 l
516.380 31.6021 l
516.990 32.1683 l
517.835 31.9440 l
518.751 31.4568 l
519.624 31.1423 l
520.454 31.0882 l
521.133 31.9804 l
521.779 32.9549 l
522.435 33.8104 l
523.096 34.6014 l
523.758 35.3552 l
524.419 36.0868 l
525.078 36.8052 l
525.734 37.5160 l
526.517 37.8638 l
527.556 37.4682 l
528.555 37.1968 l
529.523 37.0424 l
530.350 37.5792 l
531.033 38.7106 l
531.732 39.6965 l
532.440 40.6010 l
533.151 41.4613 l
533.862 42.2967 l
534.570 43.1183 l
535.276 43.9328 l
536.002 44.6819 l
537.049 44.6488 l
538.176 44.4115 l
539.253 44.3262 l
540.256 44.5169 l
541.012 45.6195 l
541.735 46.7586 l
542.475 47.7894 l
543.222 48.7655 l
543.969 49.7124 l
544.715 50.6441 l
545.456 51.5687 l
546.191 52.4912 l
547.106 53.0287 l
548.335 52.8886 l
549.514 52.8764 l
550.655 52.9713 l
551.569 53.7771 l
552.294 55.0943 l
553.048 56.2679 l
553.814 57.3703 l
554.583 58.4371 l
556.113 60.5272 l
556.868 61.5667 l
557.658 62.5300 l
558.855 62.7358 l
560.135 62.7905 l
561.359 62.9784 l
562.472 63.4587 l
563.242 64.7996 l
563.985 66.1380 l
564.751 67.3794 l
565.524 68.5751 l
567.063 70.9135 l
567.821 72.0762 l
568.570 73.2414 l
569.561 74.0071 l
570.918 74.1712 l
572.213 74.4633 l
573.462 74.8575 l
574.387 75.9672 l
575.088 77.5000 l
575.829 78.8960 l
576.585 80.2306 l
577.341 81.5371 l
578.093 82.8318 l
578.835 84.1238 l
579.565 85.4184 l
580.348 86.6264 l
581.628 87.1223 l
582.989 87.5153 l
584.288 88.0253 l
585.427 88.8422 l
586.813 92.0187 l
587.525 93.5036 l
588.243 94.9508 l
588.956 96.3822 l
589.659 97.8090 l
590.348 99.2379 l
591.023 100.672 l
592.014 101.705 l
593.417 102.225 l
594.744 102.871 l
596.012 103.617 l
596.845 105.062 l
597.430 106.835 l
598.067 108.484 l
598.717 110.079 l
599.365 111.653 l
600.002 113.219 l
600.624 114.785 l
601.229 116.357 l
601.909 117.835 l
603.179 118.671 l
604.523 119.450 l
605.797 120.331 l
606.849 121.527 l
607.366 123.414 l
607.886 125.241 l
608.434 126.992 l
608.985 128.711 l
609.525 130.419 l
610.050 132.124 l
610.554 133.834 l
611.036 135.550 l
611.923 136.882 l
613.259 137.805 l
614.500 138.848 l
615.663 139.993 l
616.265 141.786 l
616.610 143.810 l
617.014 145.721 l
617.431 147.588 l
617.840 149.435 l
618.232 151.278 l
618.602 153.121 l
618.946 154.969 l
619.397 156.720 l
620.530 157.935 l
621.720 159.133 l
622.830 160.421 l
623.637 162.015 l
623.822 164.172 l
624.031 166.247 l
624.269 168.257 l
624.507 170.238 l
624.728 172.208 l
624.925 174.176 l
625.094 176.145 l
625.236 178.117 l
625.878 179.756 l
626.990 181.105 l
627.988 182.562 l
628.877 184.120 l
629.071 186.228 l
629.016 188.468 l
629.027 190.610 l
629.049 192.711 l
629.058 194.793 l
629.042 196.868 l
628.997 198.940 l
628.919 201.011 l
628.985 202.993 l
629.814 204.585 l
630.674 206.194 l
631.440 207.879 l
631.809 209.831 l
631.485 212.179 l
631.212 214.435 l
630.971 216.632 l
630.725 218.800 l
630.457 220.954 l
630.158 223.100 l
629.824 225.241 l
629.460 227.374 l
629.693 229.270 l
630.394 231.007 l
630.957 232.832 l
631.371 234.745 l
630.968 237.048 l
630.342 239.391 l
629.790 241.649 l
629.248 243.867 l
628.690 246.062 l
628.102 248.243 l
627.478 250.411 l
626.816 252.570 l
626.342 254.662 l
626.685 256.554 l
627.023 258.484 l
627.251 260.469 l
626.981 262.637 l
625.988 265.001 l
625.076 267.274 l
624.202 269.493 l
623.320 271.681 l
622.414 273.845 l
621.474 275.991 l
620.496 278.120 l
619.493 280.230 l
619.163 282.248 l
619.268 284.240 l
619.215 286.289 l
618.968 288.391 l
617.818 290.660 l
616.495 292.888 l
615.257 295.049 l
614.030 297.169 l
612.787 299.258 l
611.514 301.321 l
610.205 303.360 l
608.856 305.374 l
607.739 307.369 l
607.445 309.387 l
607.103 311.446 l
606.638 313.530 l
605.591 315.657 l
603.849 317.763 l
602.223 319.795 l
600.638 321.780 l
599.051 323.727 l
597.442 325.641 l
595.801 327.522 l
594.125 329.372 l
592.438 331.193 l
591.459 333.117 l
590.844 335.134 l
590.058 337.161 l
589.043 339.184 l
587.112 341.099 l
585.076 342.921 l
583.134 344.696 l
581.210 346.430 l
579.276 348.124 l
577.317 349.779 l
575.329 351.396 l
573.309 352.973 l
571.551 354.607 l
570.549 356.500 l
569.461 358.411 l
568.246 360.311 l
566.413 362.062 l
563.983 363.588 l
561.694 365.073 l
559.455 366.521 l
557.222 367.926 l
554.975 369.287 l
552.707 370.603 l
550.414 371.874 l
548.131 373.116 l
546.520 374.687 l
545.169 376.433 l
543.654 378.139 l
541.894 379.755 l
539.304 380.976 l
536.687 382.088 l
534.168 383.176 l
531.678 384.225 l
529.188 385.229 l
526.687 386.183 l
524.170 387.087 l
521.635 387.939 l
519.363 388.950 l
517.701 390.432 l
515.930 391.891 l
514.042 393.297 l
511.575 394.331 l
508.673 394.983 l
505.923 395.642 l
503.230 396.274 l
500.556 396.864 l
497.883 397.404 l
495.204 397.890 l
492.518 398.320 l
489.863 398.736 l
487.753 399.703 l
485.788 400.882 l
483.683 401.970 l
481.353 402.868 l
478.385 403.117 l
475.461 403.276 l
472.635 403.438 l
469.847 403.569 l
467.075 403.652 l
464.309 403.681 l
461.547 403.654 l
458.786 403.569 l
456.244 403.757 l
454.096 404.568 l
451.840 405.304 l
449.490 405.945 l
446.698 406.000 l
443.673 405.590 l
440.790 405.237 l
437.970 404.875 l
435.181 404.474 l
432.412 404.023 l
429.658 403.516 l
426.916 402.953 l
424.219 402.401 l
421.850 402.576 l
419.518 402.952 l
417.090 403.195 l
414.502 403.149 l
411.559 402.284 l
408.707 401.376 l
405.943 400.500 l
403.227 399.602 l
400.543 398.663 l
397.886 397.673 l
395.254 396.629 l
392.646 395.529 l
390.157 394.805 l
387.804 394.767 l
385.372 394.604 l
382.885 394.311 l
380.189 393.271 l
377.463 391.771 l
374.850 390.373 l
372.299 388.982 l
369.794 387.564 l
367.326 386.104 l
364.893 384.596 l
362.495 383.037 l
360.137 381.525 l
357.822 380.827 l
355.466 380.278 l
353.069 379.573 l
350.625 378.506 l
348.159 376.565 l
345.796 374.647 l
343.506 372.783 l
341.269 370.914 l
339.080 369.015 l
336.935 367.077 l
334.835 365.096 l
332.780 363.071 l
330.692 361.487 l
328.483 360.548 l
326.249 359.449 l
324.013 358.199 l
321.866 356.142 l
319.859 353.707 l
317.922 351.404 l
316.042 349.127 l
314.215 346.839 l
312.441 344.524 l
310.719 342.176 l
309.051 339.793 l
307.395 337.492 l
305.472 335.972 l
303.470 334.531 l
301.487 332.932 l
299.610 330.944 l
298.036 328.164 l
296.544 325.467 l
295.102 322.842 l
293.713 320.230 l
292.382 317.606 l
291.108 314.963 l
289.894 312.296 l
288.740 309.604 l
287.364 307.352 l
285.656 305.610 l
283.991 303.701 l
282.388 301.641 l
281.191 298.839 l
S
cliprestore
newpath
0 0 m
0 409.000 l
914.000 409.000 l
914.000 0 l
h
W
Q
q
279.191 10.9321 355.617 397.067 rc
newpath
487.414 16.9976 m
487.414 16.9860 l
487.404 16.2845 l
487.361 15.2218 l
487.326 14.4474 l
487.323 13.9321 l
487.506 14.3748 l
487.729 15.0848 l
487.921 15.6642 l
488.095 16.1552 l
488.258 16.5831 l
488.414 16.9639 l
488.565 17.3085 l
488.713 17.6246 l
488.866 17.6606 l
489.026 16.8083 l
489.173 16.0321 l
489.323 15.4259 l
489.544 15.3983 l
489.861 16.1685 l
490.153 16.8266 l
490.429 17.3749 l
490.695 17.8501 l
490.956 18.2739 l
491.214 18.6600 l
491.469 19.0178 l
491.724 19.3327 l
492.042 18.8808 l
492.375 18.0286 l
492.693 17.3893 l
493.016 16.9878 l
493.402 17.5525 l
493.786 18.3097 l
494.156 18.9311 l
494.518 19.4683 l
494.877 19.9497 l
495.234 20.3922 l
495.589 20.8067 l
495.942 21.2005 l
496.338 21.2850 l
496.842 20.5201 l
497.327 19.8554 l
497.797 19.3417 l
498.269 19.4492 l
498.736 20.2993 l
499.191 21.0188 l
499.642 21.6369 l
500.090 22.1920 l
500.538 22.7055 l
500.984 23.1905 l
501.429 23.6553 l
501.879 24.0724 l
502.481 23.7050 l
503.133 23.0084 l
503.754 22.5063 l
504.355 22.2518 l
504.908 22.9620 l
505.437 23.8069 l
505.966 24.5234 l
506.495 25.1655 l
507.024 25.7615 l
507.552 26.3275 l
508.079 26.8733 l
508.605 27.4055 l
509.213 27.6005 l
510.009 26.9953 l
510.776 26.5056 l
511.519 26.1479 l
512.195 26.4504 l
512.788 27.4255 l
513.383 28.2591 l
513.982 29.0010 l
514.582 29.6895 l
515.182 30.3453 l
515.782 30.9803 l
516.380 31.6021 l
516.990 32.1683 l
517.835 31.9440 l
518.751 31.4568 l
519.624 31.1423 l
520.454 31.0882 l
521.133 31.9804 l
521.779 32.9549 l
522.435 33.8104 l
523.096 34.6014 l
523.758 35.3552 l
524.419 36.0868 l
525.078 36.8052 l
525.734 37.5160 l
526.517 37.8638 l
527.556 37.4682 l
528.555 37.1968 l
529.523 37.0424 l
530.350 37.5792 l
531.033 38.7106 l
531.732 39.6965 l
532.440 40.6010 l
533.151 41.4613 l
533.862 42.2967 l
534.570 43.1183 l
535.276 43.9328 l
536.002 44.6819 l
537.049 44.6488 l
538.176 44.4115 l
539.253 44.3262 l
540.256 44.5169 l
541.012 45.6195 l
541.735 46.7586 l
542.475 47.7894 l
543.222 48.7655 l
543.969 49.7124 l
544.715 50.6441 l
545.456 51.5687 l
546.191 52.4912 l
547.106 53.0287 l
548.335 52.8886 l
549.514 52.8764 l
550.655 52.9713 l
551.569 53.7771 l
552.294 55.0943 l
553.048 56.2679 l
553.814 57.3703 l
554.583 58.4371 l
556.113 60.5272 l
556.868 61.5667 l
557.658 62.5300 l
558.855 62.7358 l
560.135 62.7905 l
561.359 62.9784 l
562.472 63.4587 l
563.242 64.7996 l
563.985 66.1380 l
564.751 67.3794 l
565.524 68.5751 l
567.063 70.9135 l
567.821 72.0762 l
568.570 73.2414 l
569.561 74.0071 l
570.918 74.1712 l
572.213 74.4633 l
573.462 74.8575 l
574.387 75.9672 l
575.088 77.5000 l
575.829 78.8960 l
576.585 80.2306 l
577.341 81.5371 l
578.093 82.8318 l
578.835 84.1238 l
579.565 85.4184 l
580.348 86.6264 l
581.628 87.1223 l
582.989 87.5153 l
584.288 88.0253 l
585.427 88.8422 l
586.813 92.0187 l
587.525 93.5036 l
588.243 94.9508 l
588.956 96.3822 l
589.659 97.8090 l
590.348 99.2379 l
591.023 100.672 l
592.014 101.705 l
593.417 102.225 l
594.744 102.871 l
596.012 103.617 l
596.845 105.062 l
597.430 106.835 l
598.067 108.484 l
598.717 110.079 l
599.365 111.653 l
600.002 113.219 l
600.624 114.785 l
601.229 116.357 l
601.909 117.835 l
603.179 118.671 l
604.523 119.450 l
605.797 120.331 l
606.849 121.527 l
607.366 123.414 l
607.886 125.241 l
608.434 126.992 l
608.985 128.711 l
609.525 130.419 l
610.050 132.124 l
610.554 133.834 l
611.036 135.550 l
611.923 136.882 l
613.259 137.805 l
614.500 138.848 l
615.663 139.993 l
616.265 141.786 l
616.610 143.810 l
617.014 145.721 l
617.431 147.588 l
617.840 149.435 l
618.232 151.278 l
618.602 153.121 l
618.946 154.969 l
619.397 156.720 l
620.530 157.935 l
621.720 159.133 l
622.830 160.421 l
623.637 162.015 l
623.822 164.172 l
624.031 166.247 l
624.269 168.257 l
624.507 170.238 l
624.728 172.208 l
624.925 174.176 l
625.094 176.145 l
625.236 178.117 l
625.878 179.756 l
626.990 181.105 l
627.988 182.562 l
628.877 184.120 l
629.071 186.228 l
629.016 188.468 l
629.027 190.610 l
629.049 192.711 l
629.058 194.793 l
629.042 196.868 l
628.997 198.940 l
628.919 201.011 l
628.985 202.993 l
629.814 204.585 l
630.674 206.194 l
631.440 207.879 l
631.809 209.831 l
631.485 212.179 l
631.212 214.435 l
630.971 216.632 l
630.725 218.800 l
630.457 220.954 l
630.158 223.100 l
629.824 225.241 l
629.460 227.374 l
629.693 229.270 l
630.394 231.007 l
630.957 232.832 l
631.371 234.745 l
630.968 237.048 l
630.342 239.391 l
629.790 241.649 l
629.248 243.867 l
628.690 246.062 l
628.102 248.243 l
627.478 250.411 l
626.816 252.570 l
626.342 254.662 l
626.685 256.554 l
627.023 258.484 l
627.251 260.469 l
626.981 262.637 l
625.988 265.001 l
625.076 267.274 l
624.202 269.493 l
623.320 271.681 l
622.414 273.845 l
621.474 275.991 l
620.496 278.120 l
619.493 280.230 l
619.163 282.248 l
619.268 284.240 l
619.215 286.289 l
618.968 288.391 l
617.818 290.660 l
616.495 292.888 l
615.257 295.049 l
614.030 297.169 l
612.787 299.258 l
611.514 301.321 l
610.205 303.360 l
608.856 305.374 l
607.739 307.369 l
607.445 309.387 l
607.103 311.446 l
606.638 313.530 l
605.591 315.657 l
603.849 317.763 l
602.223 319.795 l
600.638 321.780 l
599.051 323.727 l
597.442 325.641 l
595.801 327.522 l
594.125 329.372 l
592.438 331.193 l
591.459 333.117 l
590.844 335.134 l
590.058 337.161 l
589.043 339.184 l
587.112 341.099 l
585.076 342.921 l
583.134 344.696 l
581.210 346.430 l
579.276 348.124 l
577.317 349.779 l
575.329 351.396 l
573.309 352.973 l
571.551 354.607 l
570.549 356.500 l
569.461 358.411 l
568.246 360.311 l
566.413 362.062 l
563.983 363.588 l
561.694 365.073 l
559.455 366.521 l
557.222 367.926 l
554.975 369.287 l
552.707 370.603 l
550.414 371.874 l
548.131 373.116 l
546.520 374.687 l
545.169 376.433 l
543.654 378.139 l
541.894 379.755 l
539.304 380.976 l
536.687 382.088 l
534.168 383.176 l
531.678 384.225 l
529.188 385.229 l
526.687 386.183 l
524.170 387.087 l
521.635 387.939 l
519.363 388.950 l
517.701 390.432 l
515.930 391.891 l
514.042 393.297 l
511.575 394.331 l
508.673 394.983 l
505.923 395.642 l
503.230 396.274 l
500.556 396.864 l
497.883 397.404 l
495.204 397.890 l
492.518 398.320 l
489.863 398.736 l
487.753 399.703 l
485.788 400.882 l
483.683 401.970 l
481.353 402.868 l
478.385 403.117 l
475.461 403.276 l
472.635 403.438 l
469.847 403.569 l
467.075 403.652 l
464.309 403.681 l
461.547 403.654 l
458.786 403.569 l
456.244 403.757 l
454.096 404.568 l
451.840 405.304 l
449.490 405.945 l
446.698 406.000 l
443.673 405.590 l
440.790 405.237 l
437.970 404.875 l
435.181 404.474 l
432.412 404.023 l
429.658 403.516 l
426.916 402.953 l
424.219 402.401 l
421.850 402.576 l
419.518 402.952 l
417.090 403.195 l
414.502 403.149 l
411.559 402.284 l
408.707 401.376 l
405.943 400.500 l
403.227 399.602 l
400.543 398.663 l
397.886 397.673 l
395.254 396.629 l
392.646 395.529 l
390.157 394.805 l
387.804 394.767 l
385.372 394.604 l
382.885 394.311 l
380.189 393.271 l
377.463 391.771 l
374.850 390.373 l
372.299 388.982 l
369.794 387.564 l
367.326 386.104 l
364.893 384.596 l
362.495 383.037 l
360.137 381.525 l
357.822 380.827 l
355.466 380.278 l
353.069 379.573 l
350.625 378.506 l
348.159 376.565 l
345.796 374.647 l
343.506 372.783 l
341.269 370.914 l
339.080 369.015 l
336.935 367.077 l
334.835 365.096 l
332.780 363.071 l
330.692 361.487 l
328.483 360.548 l
326.249 359.449 l
324.013 358.199 l
321.866 356.142 l
319.859 353.707 l
317.922 351.404 l
316.042 349.127 l
314.215 346.839 l
312.441 344.524 l
310.719 342.176 l
309.051 339.793 l
307.395 337.492 l
305.472 335.972 l
303.470 334.531 l
301.487 332.932 l
299.610 330.944 l
298.036 328.164 l
296.544 325.467 l
295.102 322.842 l
293.713 320.230 l
292.382 317.606 l
291.108 314.963 l
289.894 312.296 l
288.740 309.604 l
287.364 307.352 l
285.656 305.610 l
283.991 303.701 l
282.388 301.641 l
281.191 298.839 l
S
cliprestore
newpath
0 0 m
0 409.000 l
914.000 409.000 l
914.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
1.50000 w
0 J
1 j
newpath
281.191 16.9976 m
631.809 16.9976 l
S
Q
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
531 61 57 33 rc
newpath
535.375 75.4687 m
541.265 75.4687 l
541.265 75.9843 l
540.890 75.9843 540.627 76.0468 540.476 76.1718  c
540.325 76.2968 540.250 76.4635 540.250 76.6718  c
540.250 76.8906 540.411 77.2291 540.734 77.6875  c
540.828 77.8333 540.979 78.0625 541.187 78.3750  c
542.062 79.7968 l
543.093 78.3750 l
543.750 77.4687 544.078 76.9010 544.078 76.6718  c
544.078 76.4739 544.000 76.3099 543.843 76.1796  c
543.687 76.0494 543.437 75.9843 543.093 75.9843  c
543.093 75.4687 l
547.328 75.4687 l
547.328 75.9843 l
546.880 76.0052 546.494 76.1250 546.171 76.3437  c
545.724 76.6562 545.114 77.3333 544.343 78.3750  c
542.625 80.6562 l
545.750 85.1406 l
546.510 86.2447 547.054 86.9088 547.382 87.1328  c
547.710 87.3567 548.135 87.4791 548.656 87.5000  c
548.656 88.0000 l
542.750 88.0000 l
542.750 87.5000 l
543.166 87.5000 543.484 87.4114 543.703 87.2343  c
543.880 87.1093 543.968 86.9427 543.968 86.7343  c
543.968 86.5156 543.677 85.9843 543.093 85.1406  c
541.265 82.4687 l
539.250 85.1406 l
538.635 85.9739 538.328 86.4687 538.328 86.6250  c
538.328 86.8437 538.429 87.0416 538.632 87.2187  c
538.835 87.3958 539.140 87.4895 539.546 87.5000  c
539.546 88.0000 l
535.468 88.0000 l
535.468 87.5000 l
535.791 87.4583 536.078 87.3489 536.328 87.1718  c
536.671 86.9010 537.255 86.2239 538.078 85.1406  c
540.703 81.6562 l
538.328 78.2031 l
537.651 77.2239 537.127 76.6093 536.757 76.3593  c
536.388 76.1093 535.927 75.9843 535.375 75.9843  c
535.375 75.4687 l
h
550.500 92.6562 m
550.500 92.0625 l
551.437 91.7500 552.164 91.2682 552.679 90.6171  c
553.195 89.9661 553.453 89.2760 553.453 88.5468  c
553.453 88.3697 553.411 88.2239 553.328 88.1093  c
553.265 88.0260 553.203 87.9843 553.140 87.9843  c
553.046 87.9843 552.828 88.0781 552.484 88.2656  c
552.317 88.3489 552.145 88.3906 551.968 88.3906  c
551.520 88.3906 551.164 88.2578 550.898 87.9921  c
550.632 87.7265 550.500 87.3593 550.500 86.8906  c
550.500 86.4427 550.671 86.0599 551.015 85.7421  c
551.359 85.4244 551.776 85.2656 552.265 85.2656  c
552.869 85.2656 553.406 85.5286 553.875 86.0546  c
554.343 86.5807 554.578 87.2760 554.578 88.1406  c
554.578 89.0781 554.252 89.9505 553.601 90.7578  c
552.950 91.5651 551.916 92.1979 550.500 92.6562  c
h
567.593 77.7656 m
568.510 76.8593 569.046 76.3385 569.203 76.2031  c
569.619 75.8593 570.065 75.5911 570.539 75.3984  c
571.013 75.2057 571.479 75.1093 571.937 75.1093  c
572.729 75.1093 573.406 75.3359 573.968 75.7890  c
574.531 76.2421 574.906 76.9010 575.093 77.7656  c
576.041 76.6718 576.838 75.9557 577.484 75.6171  c
578.130 75.2786 578.791 75.1093 579.468 75.1093  c
580.135 75.1093 580.726 75.2786 581.242 75.6171  c
581.757 75.9557 582.166 76.5156 582.468 77.2968  c
582.666 77.8281 582.765 78.6562 582.765 79.7812  c
582.765 85.1718 l
582.765 85.9531 582.828 86.4895 582.953 86.7812  c
583.036 86.9791 583.203 87.1484 583.453 87.2890  c
583.703 87.4296 584.104 87.5000 584.656 87.5000  c
584.656 88.0000 l
578.484 88.0000 l
578.484 87.5000 l
578.734 87.5000 l
579.276 87.5000 579.697 87.3958 580.000 87.1875  c
580.208 87.0416 580.359 86.8125 580.453 86.5000  c
580.484 86.3437 580.500 85.9010 580.500 85.1718  c
580.500 79.7812 l
580.500 78.7604 580.375 78.0416 580.125 77.6250  c
579.770 77.0416 579.203 76.7500 578.421 76.7500  c
577.942 76.7500 577.458 76.8697 576.968 77.1093  c
576.479 77.3489 575.890 77.7968 575.203 78.4531  c
575.171 78.6093 l
575.203 79.1875 l
575.203 85.1718 l
575.203 86.0260 575.250 86.5572 575.343 86.7656  c
575.437 86.9739 575.617 87.1484 575.882 87.2890  c
576.148 87.4296 576.599 87.5000 577.234 87.5000  c
577.234 88.0000 l
570.906 88.0000 l
570.906 87.5000 l
571.593 87.5000 572.067 87.4192 572.328 87.2578  c
572.588 87.0963 572.770 86.8489 572.875 86.5156  c
572.916 86.3697 572.937 85.9218 572.937 85.1718  c
572.937 79.7812 l
572.937 78.7604 572.786 78.0260 572.484 77.5781  c
572.088 76.9947 571.531 76.7031 570.812 76.7031  c
570.312 76.7031 569.822 76.8385 569.343 77.1093  c
568.583 77.5052 568.000 77.9531 567.593 78.4531  c
567.593 85.1718 l
567.593 85.9947 567.651 86.5286 567.765 86.7734  c
567.880 87.0182 568.049 87.2005 568.273 87.3203  c
568.497 87.4401 568.947 87.5000 569.625 87.5000  c
569.625 88.0000 l
563.437 88.0000 l
563.437 87.5000 l
564.010 87.5000 564.411 87.4401 564.640 87.3203  c
564.869 87.2005 565.044 87.0052 565.164 86.7343  c
565.283 86.4635 565.343 85.9427 565.343 85.1718  c
565.343 80.3906 l
565.343 79.0052 565.302 78.1145 565.218 77.7187  c
565.156 77.4166 565.054 77.2083 564.914 77.0937  c
564.773 76.9791 564.588 76.9218 564.359 76.9218  c
564.099 76.9218 563.791 76.9895 563.437 77.1250  c
563.234 76.6406 l
567.000 75.1093 l
567.593 75.1093 l
567.593 77.7656 l
h
f
Q
cliprestore
newpath
0 0 m
0 409.000 l
914.000 409.000 l
914.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
326.936 16.9976 m
326.936 25.5126 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
304 36 15 29 rc
newpath
327.234 52.3281 m
308.765 52.3281 l
308.765 50.8750 l
327.234 50.8750 l
327.234 52.3281 l
h
f
Q
newpath
324.015 50.8437 m
324.015 48.7291 324.333 46.9088 324.968 45.3828  c
325.604 43.8567 326.453 42.7187 327.515 41.9687  c
328.338 41.3750 329.187 41.0781 330.062 41.0781  c
331.479 41.0781 332.755 41.8020 333.890 43.2500  c
335.296 45.0416 336.000 47.4739 336.000 50.5468  c
336.000 52.7031 335.690 54.5338 335.070 56.0390  c
334.450 57.5442 333.661 58.6354 332.703 59.3125  c
331.744 59.9895 330.817 60.3281 329.921 60.3281  c
328.151 60.3281 326.677 59.2864 325.500 57.2031  c
324.510 55.4427 324.015 53.3229 324.015 50.8437  c
h
326.687 51.1875 m
326.687 53.7395 327.005 55.8177 327.640 57.4218  c
328.161 58.7864 328.932 59.4687 329.953 59.4687  c
330.453 59.4687 330.966 59.2474 331.492 58.8046  c
332.018 58.3619 332.416 57.6197 332.687 56.5781  c
333.114 55.0156 333.328 52.8072 333.328 49.9531  c
333.328 47.8385 333.109 46.0729 332.671 44.6562  c
332.338 43.6145 331.911 42.8750 331.390 42.4375  c
331.015 42.1354 330.567 41.9843 330.046 41.9843  c
329.421 41.9843 328.869 42.2604 328.390 42.8125  c
327.734 43.5729 327.286 44.7630 327.046 46.3828  c
326.807 48.0026 326.687 49.6041 326.687 51.1875  c
h
340.500 57.3437 m
340.927 57.3437 341.286 57.4921 341.578 57.7890  c
341.869 58.0859 342.015 58.4427 342.015 58.8593  c
342.015 59.2864 341.867 59.6484 341.570 59.9453  c
341.273 60.2421 340.916 60.3906 340.500 60.3906  c
340.083 60.3906 339.726 60.2421 339.429 59.9453  c
339.132 59.6484 338.984 59.2864 338.984 58.8593  c
338.984 58.4322 339.132 58.0729 339.429 57.7812  c
339.726 57.4895 340.083 57.3437 340.500 57.3437  c
h
356.546 41.0781 m
356.546 41.5781 l
355.349 41.7031 354.369 41.9453 353.609 42.3046  c
352.849 42.6640 352.096 43.2135 351.351 43.9531  c
350.606 44.6927 349.989 45.5156 349.500 46.4218  c
349.010 47.3281 348.604 48.4062 348.281 49.6562  c
349.593 48.7500 350.911 48.2968 352.234 48.2968  c
353.494 48.2968 354.591 48.8072 355.523 49.8281  c
356.455 50.8489 356.921 52.1614 356.921 53.7656  c
356.921 55.3177 356.453 56.7291 355.515 58.0000  c
354.380 59.5520 352.885 60.3281 351.031 60.3281  c
349.760 60.3281 348.682 59.9062 347.796 59.0625  c
346.067 57.4375 345.203 55.3229 345.203 52.7187  c
345.203 51.0625 345.536 49.4869 346.203 47.9921  c
346.869 46.4974 347.820 45.1718 349.054 44.0156  c
350.289 42.8593 351.471 42.0807 352.601 41.6796  c
353.731 41.2786 354.786 41.0781 355.765 41.0781  c
356.546 41.0781 l
h
348.046 50.6406 m
347.880 51.8802 347.796 52.8750 347.796 53.6250  c
347.796 54.5000 347.958 55.4505 348.281 56.4765  c
348.604 57.5026 349.088 58.3177 349.734 58.9218  c
350.192 59.3489 350.755 59.5625 351.421 59.5625  c
352.213 59.5625 352.921 59.1875 353.546 58.4375  c
354.171 57.6875 354.484 56.6197 354.484 55.2343  c
354.484 53.6822 354.174 52.3359 353.554 51.1953  c
352.934 50.0546 352.057 49.4843 350.921 49.4843  c
350.578 49.4843 350.205 49.5572 349.804 49.7031  c
349.403 49.8489 348.817 50.1614 348.046 50.6406  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
380.429 16.9976 m
380.429 25.5126 l
S
Q
q
newpath
433.922 16.9976 m
433.922 25.5126 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
411 36 15 29 rc
newpath
434.234 52.3281 m
415.765 52.3281 l
415.765 50.8750 l
434.234 50.8750 l
434.234 52.3281 l
h
f
Q
newpath
431.015 50.8437 m
431.015 48.7291 431.333 46.9088 431.968 45.3828  c
432.604 43.8567 433.453 42.7187 434.515 41.9687  c
435.338 41.3750 436.187 41.0781 437.062 41.0781  c
438.479 41.0781 439.755 41.8020 440.890 43.2500  c
442.296 45.0416 443.000 47.4739 443.000 50.5468  c
443.000 52.7031 442.690 54.5338 442.070 56.0390  c
441.450 57.5442 440.661 58.6354 439.703 59.3125  c
438.744 59.9895 437.817 60.3281 436.921 60.3281  c
435.151 60.3281 433.677 59.2864 432.500 57.2031  c
431.510 55.4427 431.015 53.3229 431.015 50.8437  c
h
433.687 51.1875 m
433.687 53.7395 434.005 55.8177 434.640 57.4218  c
435.161 58.7864 435.932 59.4687 436.953 59.4687  c
437.453 59.4687 437.966 59.2474 438.492 58.8046  c
439.018 58.3619 439.416 57.6197 439.687 56.5781  c
440.114 55.0156 440.328 52.8072 440.328 49.9531  c
440.328 47.8385 440.109 46.0729 439.671 44.6562  c
439.338 43.6145 438.911 42.8750 438.390 42.4375  c
438.015 42.1354 437.567 41.9843 437.046 41.9843  c
436.421 41.9843 435.869 42.2604 435.390 42.8125  c
434.734 43.5729 434.286 44.7630 434.046 46.3828  c
433.807 48.0026 433.687 49.6041 433.687 51.1875  c
h
447.500 57.3437 m
447.927 57.3437 448.286 57.4921 448.578 57.7890  c
448.869 58.0859 449.015 58.4427 449.015 58.8593  c
449.015 59.2864 448.867 59.6484 448.570 59.9453  c
448.273 60.2421 447.916 60.3906 447.500 60.3906  c
447.083 60.3906 446.726 60.2421 446.429 59.9453  c
446.132 59.6484 445.984 59.2864 445.984 58.8593  c
445.984 58.4322 446.132 58.0729 446.429 57.7812  c
446.726 57.4895 447.083 57.3437 447.500 57.3437  c
h
463.843 56.4375 m
462.546 60.0000 l
451.609 60.0000 l
451.609 59.5000 l
454.817 56.5625 457.078 54.1640 458.390 52.3046  c
459.703 50.4453 460.359 48.7447 460.359 47.2031  c
460.359 46.0260 460.000 45.0599 459.281 44.3046  c
458.562 43.5494 457.703 43.1718 456.703 43.1718  c
455.786 43.1718 454.966 43.4375 454.242 43.9687  c
453.518 44.5000 452.984 45.2812 452.640 46.3125  c
452.140 46.3125 l
452.369 44.6250 452.955 43.3307 453.898 42.4296  c
454.841 41.5286 456.015 41.0781 457.421 41.0781  c
458.932 41.0781 460.190 41.5599 461.195 42.5234  c
462.200 43.4869 462.703 44.6250 462.703 45.9375  c
462.703 46.8854 462.484 47.8281 462.046 48.7656  c
461.369 50.2343 460.276 51.7968 458.765 53.4531  c
456.494 55.9322 455.078 57.4270 454.515 57.9375  c
459.359 57.9375 l
460.338 57.9375 461.026 57.9010 461.421 57.8281  c
461.817 57.7552 462.177 57.6067 462.500 57.3828  c
462.822 57.1588 463.099 56.8437 463.328 56.4375  c
463.843 56.4375 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
487.414 16.9976 m
487.414 25.5126 l
S
Q
q
newpath
540.907 16.9976 m
540.907 25.5126 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
529.015 50.8437 m
529.015 48.7291 529.333 46.9088 529.968 45.3828  c
530.604 43.8567 531.453 42.7187 532.515 41.9687  c
533.338 41.3750 534.187 41.0781 535.062 41.0781  c
536.479 41.0781 537.755 41.8020 538.890 43.2500  c
540.296 45.0416 541.000 47.4739 541.000 50.5468  c
541.000 52.7031 540.690 54.5338 540.070 56.0390  c
539.450 57.5442 538.661 58.6354 537.703 59.3125  c
536.744 59.9895 535.817 60.3281 534.921 60.3281  c
533.151 60.3281 531.677 59.2864 530.500 57.2031  c
529.510 55.4427 529.015 53.3229 529.015 50.8437  c
h
531.687 51.1875 m
531.687 53.7395 532.005 55.8177 532.640 57.4218  c
533.161 58.7864 533.932 59.4687 534.953 59.4687  c
535.453 59.4687 535.966 59.2474 536.492 58.8046  c
537.018 58.3619 537.416 57.6197 537.687 56.5781  c
538.114 55.0156 538.328 52.8072 538.328 49.9531  c
538.328 47.8385 538.109 46.0729 537.671 44.6562  c
537.338 43.6145 536.911 42.8750 536.390 42.4375  c
536.015 42.1354 535.567 41.9843 535.046 41.9843  c
534.421 41.9843 533.869 42.2604 533.390 42.8125  c
532.734 43.5729 532.286 44.7630 532.046 46.3828  c
531.807 48.0026 531.687 49.6041 531.687 51.1875  c
h
545.500 57.3437 m
545.927 57.3437 546.286 57.4921 546.578 57.7890  c
546.869 58.0859 547.015 58.4427 547.015 58.8593  c
547.015 59.2864 546.867 59.6484 546.570 59.9453  c
546.273 60.2421 545.916 60.3906 545.500 60.3906  c
545.083 60.3906 544.726 60.2421 544.429 59.9453  c
544.132 59.6484 543.984 59.2864 543.984 58.8593  c
543.984 58.4322 544.132 58.0729 544.429 57.7812  c
544.726 57.4895 545.083 57.3437 545.500 57.3437  c
h
561.843 56.4375 m
560.546 60.0000 l
549.609 60.0000 l
549.609 59.5000 l
552.817 56.5625 555.078 54.1640 556.390 52.3046  c
557.703 50.4453 558.359 48.7447 558.359 47.2031  c
558.359 46.0260 558.000 45.0599 557.281 44.3046  c
556.562 43.5494 555.703 43.1718 554.703 43.1718  c
553.786 43.1718 552.966 43.4375 552.242 43.9687  c
551.518 44.5000 550.984 45.2812 550.640 46.3125  c
550.140 46.3125 l
550.369 44.6250 550.955 43.3307 551.898 42.4296  c
552.841 41.5286 554.015 41.0781 555.421 41.0781  c
556.932 41.0781 558.190 41.5599 559.195 42.5234  c
560.200 43.4869 560.703 44.6250 560.703 45.9375  c
560.703 46.8854 560.484 47.8281 560.046 48.7656  c
559.369 50.2343 558.276 51.7968 556.765 53.4531  c
554.494 55.9322 553.078 57.4270 552.515 57.9375  c
557.359 57.9375 l
558.338 57.9375 559.026 57.9010 559.421 57.8281  c
559.817 57.7552 560.177 57.6067 560.500 57.3828  c
560.822 57.1588 561.099 56.8437 561.328 56.4375  c
561.843 56.4375 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
594.399 16.9976 m
594.399 25.5126 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
583.015 50.8437 m
583.015 48.7291 583.333 46.9088 583.968 45.3828  c
584.604 43.8567 585.453 42.7187 586.515 41.9687  c
587.338 41.3750 588.187 41.0781 589.062 41.0781  c
590.479 41.0781 591.755 41.8020 592.890 43.2500  c
594.296 45.0416 595.000 47.4739 595.000 50.5468  c
595.000 52.7031 594.690 54.5338 594.070 56.0390  c
593.450 57.5442 592.661 58.6354 591.703 59.3125  c
590.744 59.9895 589.817 60.3281 588.921 60.3281  c
587.151 60.3281 585.677 59.2864 584.500 57.2031  c
583.510 55.4427 583.015 53.3229 583.015 50.8437  c
h
585.687 51.1875 m
585.687 53.7395 586.005 55.8177 586.640 57.4218  c
587.161 58.7864 587.932 59.4687 588.953 59.4687  c
589.453 59.4687 589.966 59.2474 590.492 58.8046  c
591.018 58.3619 591.416 57.6197 591.687 56.5781  c
592.114 55.0156 592.328 52.8072 592.328 49.9531  c
592.328 47.8385 592.109 46.0729 591.671 44.6562  c
591.338 43.6145 590.911 42.8750 590.390 42.4375  c
590.015 42.1354 589.567 41.9843 589.046 41.9843  c
588.421 41.9843 587.869 42.2604 587.390 42.8125  c
586.734 43.5729 586.286 44.7630 586.046 46.3828  c
585.807 48.0026 585.687 49.6041 585.687 51.1875  c
h
599.500 57.3437 m
599.927 57.3437 600.286 57.4921 600.578 57.7890  c
600.869 58.0859 601.015 58.4427 601.015 58.8593  c
601.015 59.2864 600.867 59.6484 600.570 59.9453  c
600.273 60.2421 599.916 60.3906 599.500 60.3906  c
599.083 60.3906 598.726 60.2421 598.429 59.9453  c
598.132 59.6484 597.984 59.2864 597.984 58.8593  c
597.984 58.4322 598.132 58.0729 598.429 57.7812  c
598.726 57.4895 599.083 57.3437 599.500 57.3437  c
h
616.031 53.1562 m
616.031 55.1093 l
613.546 55.1093 l
613.546 60.0000 l
611.281 60.0000 l
611.281 55.1093 l
603.437 55.1093 l
603.437 53.3593 l
612.031 41.0781 l
613.546 41.0781 l
613.546 53.1562 l
616.031 53.1562 l
h
611.281 53.1562 m
611.281 43.9687 l
604.781 53.1562 l
611.281 53.1562 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.00000 w
2 J
0 j
q
1.50000 w
0 J
1 j
newpath
487.414 406.000 m
487.414 13.9321 l
S
Q
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
357 195 57 33 rc
newpath
361.171 209.468 m
367.000 209.468 l
367.000 209.984 l
366.718 209.984 l
366.302 209.984 365.992 210.072 365.789 210.250  c
365.585 210.427 365.484 210.645 365.484 210.906  c
365.484 211.260 365.635 211.755 365.937 212.390  c
368.984 218.703 l
371.781 211.781 l
371.937 211.406 372.015 211.036 372.015 210.671  c
372.015 210.515 371.984 210.395 371.921 210.312  c
371.849 210.208 371.734 210.127 371.578 210.070  c
371.421 210.013 371.151 209.984 370.765 209.984  c
370.765 209.468 l
374.843 209.468 l
374.843 209.984 l
374.500 210.015 374.237 210.085 374.054 210.195  c
373.872 210.304 373.671 210.510 373.453 210.812  c
373.369 210.937 373.213 211.291 372.984 211.875  c
367.890 224.359 l
367.401 225.578 366.757 226.497 365.960 227.117  c
365.164 227.737 364.395 228.046 363.656 228.046  c
363.114 228.046 362.671 227.890 362.328 227.578  c
361.984 227.265 361.812 226.911 361.812 226.515  c
361.812 226.130 361.937 225.820 362.187 225.585  c
362.437 225.351 362.781 225.234 363.218 225.234  c
363.520 225.234 363.932 225.338 364.453 225.546  c
364.817 225.682 365.041 225.750 365.125 225.750  c
365.406 225.750 365.708 225.609 366.031 225.328  c
366.354 225.046 366.677 224.500 367.000 223.687  c
367.890 221.500 l
363.390 212.062 l
363.255 211.781 363.036 211.427 362.734 211.000  c
362.505 210.687 362.317 210.474 362.171 210.359  c
361.963 210.213 361.630 210.088 361.171 209.984  c
361.171 209.468 l
h
376.500 226.656 m
376.500 226.062 l
377.437 225.750 378.164 225.268 378.679 224.617  c
379.195 223.966 379.453 223.276 379.453 222.546  c
379.453 222.369 379.411 222.224 379.328 222.109  c
379.265 222.026 379.203 221.984 379.140 221.984  c
379.046 221.984 378.828 222.078 378.484 222.265  c
378.317 222.349 378.145 222.390 377.968 222.390  c
377.520 222.390 377.164 222.257 376.898 221.992  c
376.632 221.726 376.500 221.359 376.500 220.890  c
376.500 220.442 376.671 220.059 377.015 219.742  c
377.359 219.424 377.776 219.265 378.265 219.265  c
378.869 219.265 379.406 219.528 379.875 220.054  c
380.343 220.580 380.578 221.276 380.578 222.140  c
380.578 223.078 380.252 223.950 379.601 224.757  c
378.950 225.565 377.916 226.197 376.500 226.656  c
h
393.593 211.765 m
394.510 210.859 395.046 210.338 395.203 210.203  c
395.619 209.859 396.065 209.591 396.539 209.398  c
397.013 209.205 397.479 209.109 397.937 209.109  c
398.729 209.109 399.406 209.335 399.968 209.789  c
400.531 210.242 400.906 210.901 401.093 211.765  c
402.041 210.671 402.838 209.955 403.484 209.617  c
404.130 209.278 404.791 209.109 405.468 209.109  c
406.135 209.109 406.726 209.278 407.242 209.617  c
407.757 209.955 408.166 210.515 408.468 211.296  c
408.666 211.828 408.765 212.656 408.765 213.781  c
408.765 219.171 l
408.765 219.953 408.828 220.489 408.953 220.781  c
409.036 220.979 409.203 221.148 409.453 221.289  c
409.703 221.429 410.104 221.500 410.656 221.500  c
410.656 222.000 l
404.484 222.000 l
404.484 221.500 l
404.734 221.500 l
405.276 221.500 405.697 221.395 406.000 221.187  c
406.208 221.041 406.359 220.812 406.453 220.500  c
406.484 220.343 406.500 219.901 406.500 219.171  c
406.500 213.781 l
406.500 212.760 406.375 212.041 406.125 211.625  c
405.770 211.041 405.203 210.750 404.421 210.750  c
403.942 210.750 403.458 210.869 402.968 211.109  c
402.479 211.349 401.890 211.796 401.203 212.453  c
401.171 212.609 l
401.203 213.187 l
401.203 219.171 l
401.203 220.026 401.250 220.557 401.343 220.765  c
401.437 220.974 401.617 221.148 401.882 221.289  c
402.148 221.429 402.599 221.500 403.234 221.500  c
403.234 222.000 l
396.906 222.000 l
396.906 221.500 l
397.593 221.500 398.067 221.419 398.328 221.257  c
398.588 221.096 398.770 220.849 398.875 220.515  c
398.916 220.369 398.937 219.921 398.937 219.171  c
398.937 213.781 l
398.937 212.760 398.786 212.026 398.484 211.578  c
398.088 210.994 397.531 210.703 396.812 210.703  c
396.312 210.703 395.822 210.838 395.343 211.109  c
394.583 211.505 394.000 211.953 393.593 212.453  c
393.593 219.171 l
393.593 219.994 393.651 220.528 393.765 220.773  c
393.880 221.018 394.049 221.200 394.273 221.320  c
394.497 221.440 394.947 221.500 395.625 221.500  c
395.625 222.000 l
389.437 222.000 l
389.437 221.500 l
390.010 221.500 390.411 221.440 390.640 221.320  c
390.869 221.200 391.044 221.005 391.164 220.734  c
391.283 220.463 391.343 219.942 391.343 219.171  c
391.343 214.390 l
391.343 213.005 391.302 212.114 391.218 211.718  c
391.156 211.416 391.054 211.208 390.914 211.093  c
390.773 210.979 390.588 210.921 390.359 210.921  c
390.099 210.921 389.791 210.989 389.437 211.125  c
389.234 210.640 l
393.000 209.109 l
393.593 209.109 l
393.593 211.765 l
h
f
Q
cliprestore
newpath
0 0 m
0 409.000 l
914.000 409.000 l
914.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
487.414 284.541 m
478.899 284.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
445 276 15 29 rc
newpath
468.234 292.328 m
449.765 292.328 l
449.765 290.875 l
468.234 290.875 l
468.234 292.328 l
h
f
Q
newpath
467.281 283.281 m
471.796 281.078 l
472.250 281.078 l
472.250 296.734 l
472.250 297.776 472.291 298.424 472.375 298.679  c
472.458 298.934 472.638 299.130 472.914 299.265  c
473.190 299.401 473.744 299.479 474.578 299.500  c
474.578 300.000 l
467.609 300.000 l
467.609 299.500 l
468.484 299.479 469.049 299.401 469.304 299.265  c
469.559 299.130 469.737 298.953 469.835 298.734  c
469.934 298.515 469.984 297.849 469.984 296.734  c
469.984 286.718 l
469.984 285.375 469.942 284.510 469.859 284.125  c
469.786 283.833 469.666 283.619 469.500 283.484  c
469.333 283.349 469.130 283.281 468.890 283.281  c
468.557 283.281 468.088 283.421 467.484 283.703  c
467.281 283.281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
487.414 150.769 m
478.899 150.769 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
424 142 15 29 rc
newpath
447.234 158.328 m
428.765 158.328 l
428.765 156.875 l
447.234 156.875 l
447.234 158.328 l
h
f
Q
newpath
444.015 156.843 m
444.015 154.729 444.333 152.908 444.968 151.382  c
445.604 149.856 446.453 148.718 447.515 147.968  c
448.338 147.375 449.187 147.078 450.062 147.078  c
451.479 147.078 452.755 147.802 453.890 149.250  c
455.296 151.041 456.000 153.474 456.000 156.546  c
456.000 158.703 455.690 160.533 455.070 162.039  c
454.450 163.544 453.661 164.635 452.703 165.312  c
451.744 165.989 450.817 166.328 449.921 166.328  c
448.151 166.328 446.677 165.286 445.500 163.203  c
444.510 161.442 444.015 159.322 444.015 156.843  c
h
446.687 157.187 m
446.687 159.739 447.005 161.817 447.640 163.421  c
448.161 164.786 448.932 165.468 449.953 165.468  c
450.453 165.468 450.966 165.247 451.492 164.804  c
452.018 164.362 452.416 163.619 452.687 162.578  c
453.114 161.015 453.328 158.807 453.328 155.953  c
453.328 153.838 453.109 152.072 452.671 150.656  c
452.338 149.614 451.911 148.875 451.390 148.437  c
451.015 148.135 450.567 147.984 450.046 147.984  c
449.421 147.984 448.869 148.260 448.390 148.812  c
447.734 149.572 447.286 150.763 447.046 152.382  c
446.807 154.002 446.687 155.604 446.687 157.187  c
h
460.500 163.343 m
460.927 163.343 461.286 163.492 461.578 163.789  c
461.869 164.085 462.015 164.442 462.015 164.859  c
462.015 165.286 461.867 165.648 461.570 165.945  c
461.273 166.242 460.916 166.390 460.500 166.390  c
460.083 166.390 459.726 166.242 459.429 165.945  c
459.132 165.648 458.984 165.286 458.984 164.859  c
458.984 164.432 459.132 164.072 459.429 163.781  c
459.726 163.489 460.083 163.343 460.500 163.343  c
h
476.156 147.453 m
475.093 149.781 l
469.515 149.781 l
468.296 152.265 l
470.713 152.630 472.625 153.531 474.031 154.968  c
475.250 156.208 475.859 157.666 475.859 159.343  c
475.859 160.312 475.661 161.213 475.265 162.046  c
474.869 162.880 474.369 163.588 473.765 164.171  c
473.161 164.755 472.489 165.224 471.750 165.578  c
470.708 166.078 469.635 166.328 468.531 166.328  c
467.416 166.328 466.606 166.138 466.101 165.757  c
465.596 165.377 465.343 164.963 465.343 164.515  c
465.343 164.255 465.447 164.026 465.656 163.828  c
465.864 163.630 466.130 163.531 466.453 163.531  c
466.682 163.531 466.888 163.567 467.070 163.640  c
467.252 163.713 467.557 163.901 467.984 164.203  c
468.661 164.682 469.354 164.921 470.062 164.921  c
471.125 164.921 472.059 164.518 472.867 163.710  c
473.674 162.903 474.078 161.921 474.078 160.765  c
474.078 159.640 473.718 158.593 473.000 157.625  c
472.281 156.656 471.286 155.906 470.015 155.375  c
469.026 154.968 467.671 154.734 465.953 154.671  c
469.515 147.453 l
476.156 147.453 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
487.414 16.9976 m
478.899 16.9976 l
S
Q
Q
1.00000 w
2 J
0 j
Q
Q
cliprestore
0 0 924 419 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
