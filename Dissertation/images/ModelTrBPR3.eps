%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 253 575 538
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 22 Май 2020 г. 8:11:58 VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
780 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
780.000 0 l
780.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
q
1.00000 w
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
473 365 48 27 rc
newpath
477.296 376.718 m
482.140 376.718 l
482.140 377.125 l
481.838 377.125 481.625 377.177 481.500 377.281  c
481.375 377.385 481.312 377.526 481.312 377.703  c
481.312 377.880 481.442 378.156 481.703 378.531  c
481.786 378.656 481.911 378.843 482.078 379.093  c
482.812 380.265 l
483.656 379.093 l
484.187 378.354 484.453 377.885 484.453 377.687  c
484.453 377.531 484.390 377.398 484.265 377.289  c
484.140 377.179 483.937 377.125 483.656 377.125  c
483.656 376.718 l
487.125 376.718 l
487.125 377.125 l
486.760 377.145 486.442 377.250 486.171 377.437  c
485.807 377.687 485.307 378.239 484.671 379.093  c
483.265 380.968 l
485.828 384.656 l
486.453 385.562 486.901 386.106 487.171 386.289  c
487.442 386.471 487.791 386.572 488.218 386.593  c
488.218 387.000 l
483.375 387.000 l
483.375 386.593 l
483.708 386.593 483.968 386.520 484.156 386.375  c
484.302 386.270 484.375 386.130 484.375 385.953  c
484.375 385.786 484.135 385.354 483.656 384.656  c
482.140 382.453 l
480.500 384.656 l
479.989 385.333 479.734 385.734 479.734 385.859  c
479.734 386.046 479.817 386.213 479.984 386.359  c
480.151 386.505 480.401 386.583 480.734 386.593  c
480.734 387.000 l
477.375 387.000 l
477.375 386.593 l
477.645 386.562 477.885 386.468 478.093 386.312  c
478.375 386.093 478.854 385.541 479.531 384.656  c
481.687 381.781 l
479.734 378.953 l
479.171 378.151 478.739 377.645 478.437 377.437  c
478.135 377.229 477.755 377.125 477.296 377.125  c
477.296 376.718 l
h
489.734 390.828 m
489.734 390.328 l
490.505 390.078 491.101 389.684 491.523 389.148  c
491.945 388.612 492.156 388.046 492.156 387.453  c
492.156 387.307 492.125 387.187 492.062 387.093  c
492.010 387.020 491.958 386.984 491.906 386.984  c
491.822 386.984 491.640 387.062 491.359 387.218  c
491.224 387.281 491.083 387.312 490.937 387.312  c
490.572 387.312 490.281 387.203 490.062 386.984  c
489.843 386.765 489.734 386.468 489.734 386.093  c
489.734 385.729 489.875 385.414 490.156 385.148  c
490.437 384.882 490.781 384.750 491.187 384.750  c
491.677 384.750 492.114 384.966 492.500 385.398  c
492.885 385.830 493.078 386.401 493.078 387.109  c
493.078 387.880 492.809 388.596 492.273 389.257  c
491.737 389.919 490.890 390.442 489.734 390.828  c
h
503.781 378.593 m
504.520 377.843 504.958 377.416 505.093 377.312  c
505.437 377.020 505.802 376.796 506.187 376.640  c
506.572 376.484 506.958 376.406 507.343 376.406  c
507.989 376.406 508.544 376.593 509.007 376.968  c
509.471 377.343 509.781 377.885 509.937 378.593  c
510.708 377.697 511.359 377.109 511.890 376.828  c
512.421 376.546 512.968 376.406 513.531 376.406  c
514.083 376.406 514.570 376.546 514.992 376.828  c
515.414 377.109 515.750 377.567 516.000 378.203  c
516.156 378.640 516.234 379.322 516.234 380.250  c
516.234 384.671 l
516.234 385.317 516.286 385.760 516.390 386.000  c
516.463 386.166 516.601 386.307 516.804 386.421  c
517.007 386.536 517.338 386.593 517.796 386.593  c
517.796 387.000 l
512.718 387.000 l
512.718 386.593 l
512.921 386.593 l
513.369 386.593 513.713 386.510 513.953 386.343  c
514.130 386.218 514.255 386.026 514.328 385.765  c
514.359 385.640 514.375 385.276 514.375 384.671  c
514.375 380.250 l
514.375 379.416 514.276 378.822 514.078 378.468  c
513.786 377.989 513.317 377.750 512.671 377.750  c
512.276 377.750 511.877 377.851 511.476 378.054  c
511.075 378.257 510.588 378.625 510.015 379.156  c
510.000 379.281 l
510.015 379.765 l
510.015 384.671 l
510.015 385.380 510.054 385.820 510.132 385.992  c
510.210 386.164 510.359 386.307 510.578 386.421  c
510.796 386.536 511.166 386.593 511.687 386.593  c
511.687 387.000 l
506.484 387.000 l
506.484 386.593 l
507.057 386.593 507.450 386.526 507.664 386.390  c
507.877 386.255 508.026 386.052 508.109 385.781  c
508.151 385.656 508.171 385.286 508.171 384.671  c
508.171 380.250 l
508.171 379.416 508.046 378.812 507.796 378.437  c
507.463 377.958 507.000 377.718 506.406 377.718  c
506.010 377.718 505.614 377.828 505.218 378.046  c
504.593 378.380 504.114 378.750 503.781 379.156  c
503.781 384.671 l
503.781 385.349 503.825 385.789 503.914 385.992  c
504.002 386.195 504.140 386.346 504.328 386.445  c
504.515 386.544 504.890 386.593 505.453 386.593  c
505.453 387.000 l
500.359 387.000 l
500.359 386.593 l
500.828 386.593 501.156 386.544 501.343 386.445  c
501.531 386.346 501.674 386.184 501.773 385.960  c
501.872 385.737 501.921 385.307 501.921 384.671  c
501.921 380.750 l
501.921 379.614 501.885 378.880 501.812 378.546  c
501.760 378.307 501.679 378.140 501.570 378.046  c
501.460 377.953 501.307 377.906 501.109 377.906  c
500.901 377.906 500.651 377.963 500.359 378.078  c
500.187 377.671 l
503.296 376.406 l
503.781 376.406 l
503.781 378.593 l
h
f
Q
cliprestore
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
q
newpath
364.828 379.468 m
364.828 377.739 365.091 376.247 365.617 374.992  c
366.143 373.737 366.838 372.802 367.703 372.187  c
368.380 371.697 369.078 371.453 369.796 371.453  c
370.963 371.453 372.010 372.052 372.937 373.250  c
374.104 374.718 374.687 376.713 374.687 379.234  c
374.687 381.005 374.432 382.507 373.921 383.742  c
373.411 384.976 372.760 385.872 371.968 386.429  c
371.177 386.987 370.416 387.265 369.687 387.265  c
368.229 387.265 367.020 386.411 366.062 384.703  c
365.239 383.255 364.828 381.510 364.828 379.468  c
h
367.031 379.750 m
367.031 381.854 367.291 383.567 367.812 384.890  c
368.239 386.005 368.875 386.562 369.718 386.562  c
370.125 386.562 370.544 386.380 370.976 386.015  c
371.408 385.651 371.739 385.041 371.968 384.187  c
372.312 382.906 372.484 381.093 372.484 378.750  c
372.484 377.010 372.302 375.562 371.937 374.406  c
371.666 373.541 371.317 372.927 370.890 372.562  c
370.588 372.322 370.218 372.203 369.781 372.203  c
369.270 372.203 368.817 372.432 368.421 372.890  c
367.880 373.505 367.513 374.479 367.320 375.812  c
367.127 377.145 367.031 378.458 367.031 379.750  c
h
f
Q
q
newpath
455.828 358.468 m
455.828 356.739 456.091 355.247 456.617 353.992  c
457.143 352.737 457.838 351.802 458.703 351.187  c
459.380 350.697 460.078 350.453 460.796 350.453  c
461.963 350.453 463.010 351.052 463.937 352.250  c
465.104 353.718 465.687 355.713 465.687 358.234  c
465.687 360.005 465.432 361.507 464.921 362.742  c
464.411 363.976 463.760 364.872 462.968 365.429  c
462.177 365.987 461.416 366.265 460.687 366.265  c
459.229 366.265 458.020 365.411 457.062 363.703  c
456.239 362.255 455.828 360.510 455.828 358.468  c
h
458.031 358.750 m
458.031 360.854 458.291 362.567 458.812 363.890  c
459.239 365.005 459.875 365.562 460.718 365.562  c
461.125 365.562 461.544 365.380 461.976 365.015  c
462.408 364.651 462.739 364.041 462.968 363.187  c
463.312 361.906 463.484 360.093 463.484 357.750  c
463.484 356.010 463.302 354.562 462.937 353.406  c
462.666 352.541 462.317 351.927 461.890 351.562  c
461.588 351.322 461.218 351.203 460.781 351.203  c
460.270 351.203 459.817 351.432 459.421 351.890  c
458.880 352.505 458.513 353.479 458.320 354.812  c
458.127 356.145 458.031 357.458 458.031 358.750  c
h
469.375 363.828 m
469.729 363.828 470.026 363.947 470.265 364.187  c
470.505 364.427 470.625 364.718 470.625 365.062  c
470.625 365.406 470.502 365.700 470.257 365.945  c
470.013 366.190 469.718 366.312 469.375 366.312  c
469.031 366.312 468.737 366.190 468.492 365.945  c
468.247 365.700 468.125 365.406 468.125 365.062  c
468.125 364.718 468.247 364.427 468.492 364.187  c
468.737 363.947 469.031 363.828 469.375 363.828  c
h
482.234 350.765 m
481.359 352.687 l
476.781 352.687 l
475.781 354.718 l
477.760 355.010 479.333 355.750 480.500 356.937  c
481.489 357.958 481.984 359.156 481.984 360.531  c
481.984 361.333 481.822 362.075 481.500 362.757  c
481.177 363.440 480.768 364.020 480.273 364.500  c
479.778 364.979 479.229 365.364 478.625 365.656  c
477.760 366.062 476.875 366.265 475.968 366.265  c
475.052 366.265 474.385 366.112 473.968 365.804  c
473.552 365.497 473.343 365.156 473.343 364.781  c
473.343 364.572 473.432 364.388 473.609 364.226  c
473.786 364.065 474.005 363.984 474.265 363.984  c
474.453 363.984 474.619 364.013 474.765 364.070  c
474.911 364.127 475.161 364.281 475.515 364.531  c
476.078 364.916 476.645 365.109 477.218 365.109  c
478.104 365.109 478.877 364.778 479.539 364.117  c
480.200 363.455 480.531 362.651 480.531 361.703  c
480.531 360.776 480.234 359.914 479.640 359.117  c
479.046 358.320 478.229 357.708 477.187 357.281  c
476.375 356.937 475.265 356.739 473.859 356.687  c
476.781 350.765 l
482.234 350.765 l
h
f
Q
q
newpath
549.703 331.265 m
553.406 329.453 l
553.765 329.453 l
553.765 342.312 l
553.765 343.166 553.802 343.697 553.875 343.906  c
553.947 344.114 554.096 344.276 554.320 344.390  c
554.544 344.505 555.000 344.567 555.687 344.578  c
555.687 345.000 l
549.968 345.000 l
549.968 344.578 l
550.687 344.567 551.151 344.507 551.359 344.398  c
551.567 344.289 551.713 344.143 551.796 343.960  c
551.880 343.778 551.921 343.229 551.921 342.312  c
551.921 334.093 l
551.921 332.989 551.885 332.281 551.812 331.968  c
551.760 331.729 551.664 331.552 551.523 331.437  c
551.382 331.322 551.213 331.265 551.015 331.265  c
550.744 331.265 550.359 331.380 549.859 331.609  c
549.703 331.265 l
h
f
Q
Q
Q
q
1.00000 w
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
202 332 48 27 rc
newpath
206.140 343.718 m
210.937 343.718 l
210.937 344.125 l
210.687 344.125 l
210.354 344.125 210.104 344.197 209.937 344.343  c
209.770 344.489 209.687 344.671 209.687 344.890  c
209.687 345.182 209.807 345.588 210.046 346.109  c
212.562 351.296 l
214.859 345.609 l
214.984 345.307 215.046 345.005 215.046 344.703  c
215.046 344.567 215.020 344.463 214.968 344.390  c
214.916 344.317 214.825 344.255 214.695 344.203  c
214.565 344.151 214.338 344.125 214.015 344.125  c
214.015 343.718 l
217.359 343.718 l
217.359 344.125 l
217.088 344.156 216.877 344.216 216.726 344.304  c
216.575 344.393 216.411 344.562 216.234 344.812  c
216.161 344.916 216.031 345.203 215.843 345.671  c
211.656 355.937 l
211.250 356.937 210.721 357.692 210.070 358.203  c
209.419 358.713 208.786 358.968 208.171 358.968  c
207.734 358.968 207.372 358.841 207.085 358.585  c
206.799 358.330 206.656 358.036 206.656 357.703  c
206.656 357.390 206.760 357.138 206.968 356.945  c
207.177 356.752 207.458 356.656 207.812 356.656  c
208.062 356.656 208.401 356.739 208.828 356.906  c
209.130 357.020 209.317 357.078 209.390 357.078  c
209.619 357.078 209.867 356.960 210.132 356.726  c
210.398 356.492 210.666 356.041 210.937 355.375  c
211.656 353.593 l
207.968 345.828 l
207.854 345.599 207.671 345.312 207.421 344.968  c
207.234 344.708 207.083 344.531 206.968 344.437  c
206.791 344.322 206.515 344.218 206.140 344.125  c
206.140 343.718 l
h
218.734 357.828 m
218.734 357.328 l
219.505 357.078 220.101 356.684 220.523 356.148  c
220.945 355.612 221.156 355.046 221.156 354.453  c
221.156 354.307 221.125 354.187 221.062 354.093  c
221.010 354.020 220.958 353.984 220.906 353.984  c
220.822 353.984 220.640 354.062 220.359 354.218  c
220.224 354.281 220.083 354.312 219.937 354.312  c
219.572 354.312 219.281 354.203 219.062 353.984  c
218.843 353.765 218.734 353.468 218.734 353.093  c
218.734 352.729 218.875 352.414 219.156 352.148  c
219.437 351.882 219.781 351.750 220.187 351.750  c
220.677 351.750 221.114 351.966 221.500 352.398  c
221.885 352.830 222.078 353.401 222.078 354.109  c
222.078 354.880 221.809 355.596 221.273 356.257  c
220.737 356.919 219.890 357.442 218.734 357.828  c
h
232.781 345.593 m
233.520 344.843 233.958 344.416 234.093 344.312  c
234.437 344.020 234.802 343.796 235.187 343.640  c
235.572 343.484 235.958 343.406 236.343 343.406  c
236.989 343.406 237.544 343.593 238.007 343.968  c
238.471 344.343 238.781 344.885 238.937 345.593  c
239.708 344.697 240.359 344.109 240.890 343.828  c
241.421 343.546 241.968 343.406 242.531 343.406  c
243.083 343.406 243.570 343.546 243.992 343.828  c
244.414 344.109 244.750 344.567 245.000 345.203  c
245.156 345.640 245.234 346.322 245.234 347.250  c
245.234 351.671 l
245.234 352.317 245.286 352.760 245.390 353.000  c
245.463 353.166 245.601 353.307 245.804 353.421  c
246.007 353.536 246.338 353.593 246.796 353.593  c
246.796 354.000 l
241.718 354.000 l
241.718 353.593 l
241.921 353.593 l
242.369 353.593 242.713 353.510 242.953 353.343  c
243.130 353.218 243.255 353.026 243.328 352.765  c
243.359 352.640 243.375 352.276 243.375 351.671  c
243.375 347.250 l
243.375 346.416 243.276 345.822 243.078 345.468  c
242.786 344.989 242.317 344.750 241.671 344.750  c
241.276 344.750 240.877 344.851 240.476 345.054  c
240.075 345.257 239.588 345.625 239.015 346.156  c
239.000 346.281 l
239.015 346.765 l
239.015 351.671 l
239.015 352.380 239.054 352.820 239.132 352.992  c
239.210 353.164 239.359 353.307 239.578 353.421  c
239.796 353.536 240.166 353.593 240.687 353.593  c
240.687 354.000 l
235.484 354.000 l
235.484 353.593 l
236.057 353.593 236.450 353.526 236.664 353.390  c
236.877 353.255 237.026 353.052 237.109 352.781  c
237.151 352.656 237.171 352.286 237.171 351.671  c
237.171 347.250 l
237.171 346.416 237.046 345.812 236.796 345.437  c
236.463 344.958 236.000 344.718 235.406 344.718  c
235.010 344.718 234.614 344.828 234.218 345.046  c
233.593 345.380 233.114 345.750 232.781 346.156  c
232.781 351.671 l
232.781 352.349 232.825 352.789 232.914 352.992  c
233.002 353.195 233.140 353.346 233.328 353.445  c
233.515 353.544 233.890 353.593 234.453 353.593  c
234.453 354.000 l
229.359 354.000 l
229.359 353.593 l
229.828 353.593 230.156 353.544 230.343 353.445  c
230.531 353.346 230.674 353.184 230.773 352.960  c
230.872 352.737 230.921 352.307 230.921 351.671  c
230.921 347.750 l
230.921 346.614 230.885 345.880 230.812 345.546  c
230.760 345.307 230.679 345.140 230.570 345.046  c
230.460 344.953 230.307 344.906 230.109 344.906  c
229.901 344.906 229.651 344.963 229.359 345.078  c
229.187 344.671 l
232.296 343.406 l
232.781 343.406 l
232.781 345.593 l
h
f
Q
cliprestore
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
q
newpath
341.828 372.468 m
341.828 370.739 342.091 369.247 342.617 367.992  c
343.143 366.737 343.838 365.802 344.703 365.187  c
345.380 364.697 346.078 364.453 346.796 364.453  c
347.963 364.453 349.010 365.052 349.937 366.250  c
351.104 367.718 351.687 369.713 351.687 372.234  c
351.687 374.005 351.432 375.507 350.921 376.742  c
350.411 377.976 349.760 378.872 348.968 379.429  c
348.177 379.987 347.416 380.265 346.687 380.265  c
345.229 380.265 344.020 379.411 343.062 377.703  c
342.239 376.255 341.828 374.510 341.828 372.468  c
h
344.031 372.750 m
344.031 374.854 344.291 376.567 344.812 377.890  c
345.239 379.005 345.875 379.562 346.718 379.562  c
347.125 379.562 347.544 379.380 347.976 379.015  c
348.408 378.651 348.739 378.041 348.968 377.187  c
349.312 375.906 349.484 374.093 349.484 371.750  c
349.484 370.010 349.302 368.562 348.937 367.406  c
348.666 366.541 348.317 365.927 347.890 365.562  c
347.588 365.322 347.218 365.203 346.781 365.203  c
346.270 365.203 345.817 365.432 345.421 365.890  c
344.880 366.505 344.513 367.479 344.320 368.812  c
344.127 370.145 344.031 371.458 344.031 372.750  c
h
f
Q
q
newpath
258.828 335.468 m
258.828 333.739 259.091 332.247 259.617 330.992  c
260.143 329.737 260.838 328.802 261.703 328.187  c
262.380 327.697 263.078 327.453 263.796 327.453  c
264.963 327.453 266.010 328.052 266.937 329.250  c
268.104 330.718 268.687 332.713 268.687 335.234  c
268.687 337.005 268.432 338.507 267.921 339.742  c
267.411 340.976 266.760 341.872 265.968 342.429  c
265.177 342.987 264.416 343.265 263.687 343.265  c
262.229 343.265 261.020 342.411 260.062 340.703  c
259.239 339.255 258.828 337.510 258.828 335.468  c
h
261.031 335.750 m
261.031 337.854 261.291 339.567 261.812 340.890  c
262.239 342.005 262.875 342.562 263.718 342.562  c
264.125 342.562 264.544 342.380 264.976 342.015  c
265.408 341.651 265.739 341.041 265.968 340.187  c
266.312 338.906 266.484 337.093 266.484 334.750  c
266.484 333.010 266.302 331.562 265.937 330.406  c
265.666 329.541 265.317 328.927 264.890 328.562  c
264.588 328.322 264.218 328.203 263.781 328.203  c
263.270 328.203 262.817 328.432 262.421 328.890  c
261.880 329.505 261.513 330.479 261.320 331.812  c
261.127 333.145 261.031 334.458 261.031 335.750  c
h
272.375 340.828 m
272.729 340.828 273.026 340.947 273.265 341.187  c
273.505 341.427 273.625 341.718 273.625 342.062  c
273.625 342.406 273.502 342.700 273.257 342.945  c
273.013 343.190 272.718 343.312 272.375 343.312  c
272.031 343.312 271.737 343.190 271.492 342.945  c
271.247 342.700 271.125 342.406 271.125 342.062  c
271.125 341.718 271.247 341.427 271.492 341.187  c
271.737 340.947 272.031 340.828 272.375 340.828  c
h
285.234 327.765 m
284.359 329.687 l
279.781 329.687 l
278.781 331.718 l
280.760 332.010 282.333 332.750 283.500 333.937  c
284.489 334.958 284.984 336.156 284.984 337.531  c
284.984 338.333 284.822 339.075 284.500 339.757  c
284.177 340.440 283.768 341.020 283.273 341.500  c
282.778 341.979 282.229 342.364 281.625 342.656  c
280.760 343.062 279.875 343.265 278.968 343.265  c
278.052 343.265 277.385 343.112 276.968 342.804  c
276.552 342.497 276.343 342.156 276.343 341.781  c
276.343 341.572 276.432 341.388 276.609 341.226  c
276.786 341.065 277.005 340.984 277.265 340.984  c
277.453 340.984 277.619 341.013 277.765 341.070  c
277.911 341.127 278.161 341.281 278.515 341.531  c
279.078 341.916 279.645 342.109 280.218 342.109  c
281.104 342.109 281.877 341.778 282.539 341.117  c
283.200 340.455 283.531 339.651 283.531 338.703  c
283.531 337.776 283.234 336.914 282.640 336.117  c
282.046 335.320 281.229 334.708 280.187 334.281  c
279.375 333.937 278.265 333.739 276.859 333.687  c
279.781 327.765 l
285.234 327.765 l
h
f
Q
q
newpath
212.703 293.265 m
216.406 291.453 l
216.765 291.453 l
216.765 304.312 l
216.765 305.166 216.802 305.697 216.875 305.906  c
216.947 306.114 217.096 306.276 217.320 306.390  c
217.544 306.505 218.000 306.567 218.687 306.578  c
218.687 307.000 l
212.968 307.000 l
212.968 306.578 l
213.687 306.567 214.151 306.507 214.359 306.398  c
214.567 306.289 214.713 306.143 214.796 305.960  c
214.880 305.778 214.921 305.229 214.921 304.312  c
214.921 296.093 l
214.921 294.989 214.885 294.281 214.812 293.968  c
214.760 293.729 214.664 293.552 214.523 293.437  c
214.382 293.322 214.213 293.265 214.015 293.265  c
213.744 293.265 213.359 293.380 212.859 293.609  c
212.703 293.265 l
h
f
Q
Q
Q
q
1.00000 w
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
120 152 47 27 rc
newpath
133.656 170.843 m
133.531 174.000 l
124.453 174.000 l
124.453 173.593 l
131.281 164.500 l
127.921 164.500 l
127.192 164.500 126.716 164.546 126.492 164.640  c
126.268 164.734 126.083 164.911 125.937 165.171  c
125.739 165.546 125.625 166.010 125.593 166.562  c
125.140 166.562 l
125.218 163.718 l
133.843 163.718 l
133.843 164.125 l
126.937 173.250 l
130.687 173.250 l
131.479 173.250 132.015 173.184 132.296 173.054  c
132.578 172.924 132.802 172.692 132.968 172.359  c
133.093 172.119 133.197 171.614 133.281 170.843  c
133.656 170.843 l
h
135.442 177.828 m
135.442 177.328 l
136.213 177.078 136.810 176.684 137.231 176.148  c
137.653 175.612 137.864 175.046 137.864 174.453  c
137.864 174.307 137.833 174.187 137.771 174.093  c
137.718 174.020 137.666 173.984 137.614 173.984  c
137.531 173.984 137.349 174.062 137.067 174.218  c
136.932 174.281 136.791 174.312 136.646 174.312  c
136.281 174.312 135.989 174.203 135.771 173.984  c
135.552 173.765 135.442 173.468 135.442 173.093  c
135.442 172.729 135.583 172.414 135.864 172.148  c
136.146 171.882 136.489 171.750 136.896 171.750  c
137.385 171.750 137.823 171.966 138.208 172.398  c
138.593 172.830 138.786 173.401 138.786 174.109  c
138.786 174.880 138.518 175.596 137.981 176.257  c
137.445 176.919 136.599 177.442 135.442 177.828  c
h
149.489 165.593 m
150.229 164.843 150.666 164.416 150.802 164.312  c
151.146 164.020 151.510 163.796 151.896 163.640  c
152.281 163.484 152.666 163.406 153.052 163.406  c
153.698 163.406 154.252 163.593 154.716 163.968  c
155.179 164.343 155.489 164.885 155.646 165.593  c
156.416 164.697 157.067 164.109 157.599 163.828  c
158.130 163.546 158.677 163.406 159.239 163.406  c
159.791 163.406 160.278 163.546 160.700 163.828  c
161.122 164.109 161.458 164.567 161.708 165.203  c
161.864 165.640 161.942 166.322 161.942 167.250  c
161.942 171.671 l
161.942 172.317 161.995 172.760 162.099 173.000  c
162.172 173.166 162.310 173.307 162.513 173.421  c
162.716 173.536 163.047 173.593 163.505 173.593  c
163.505 174.000 l
158.427 174.000 l
158.427 173.593 l
158.630 173.593 l
159.078 173.593 159.422 173.510 159.661 173.343  c
159.838 173.218 159.963 173.026 160.036 172.765  c
160.067 172.640 160.083 172.276 160.083 171.671  c
160.083 167.250 l
160.083 166.416 159.984 165.822 159.786 165.468  c
159.495 164.989 159.026 164.750 158.380 164.750  c
157.984 164.750 157.586 164.851 157.185 165.054  c
156.784 165.257 156.297 165.625 155.724 166.156  c
155.708 166.281 l
155.724 166.765 l
155.724 171.671 l
155.724 172.380 155.763 172.820 155.841 172.992  c
155.919 173.164 156.067 173.307 156.286 173.421  c
156.505 173.536 156.875 173.593 157.396 173.593  c
157.396 174.000 l
152.192 174.000 l
152.192 173.593 l
152.765 173.593 153.159 173.526 153.372 173.390  c
153.586 173.255 153.734 173.052 153.817 172.781  c
153.859 172.656 153.880 172.286 153.880 171.671  c
153.880 167.250 l
153.880 166.416 153.755 165.812 153.505 165.437  c
153.172 164.958 152.708 164.718 152.114 164.718  c
151.718 164.718 151.323 164.828 150.927 165.046  c
150.302 165.380 149.823 165.750 149.489 166.156  c
149.489 171.671 l
149.489 172.349 149.534 172.789 149.622 172.992  c
149.711 173.195 149.849 173.346 150.036 173.445  c
150.224 173.544 150.599 173.593 151.161 173.593  c
151.161 174.000 l
146.067 174.000 l
146.067 173.593 l
146.536 173.593 146.864 173.544 147.052 173.445  c
147.239 173.346 147.383 173.184 147.481 172.960  c
147.580 172.737 147.630 172.307 147.630 171.671  c
147.630 167.750 l
147.630 166.614 147.593 165.880 147.521 165.546  c
147.468 165.307 147.388 165.140 147.278 165.046  c
147.169 164.953 147.015 164.906 146.817 164.906  c
146.609 164.906 146.359 164.963 146.067 165.078  c
145.896 164.671 l
149.005 163.406 l
149.489 163.406 l
149.489 165.593 l
h
f
Q
cliprestore
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
q
Q
q
newpath
172.828 202.468 m
172.828 200.739 173.091 199.247 173.617 197.992  c
174.143 196.737 174.838 195.802 175.703 195.187  c
176.380 194.697 177.078 194.453 177.796 194.453  c
178.963 194.453 180.010 195.052 180.937 196.250  c
182.104 197.718 182.687 199.713 182.687 202.234  c
182.687 204.005 182.432 205.507 181.921 206.742  c
181.411 207.976 180.760 208.872 179.968 209.429  c
179.177 209.987 178.416 210.265 177.687 210.265  c
176.229 210.265 175.020 209.411 174.062 207.703  c
173.239 206.255 172.828 204.510 172.828 202.468  c
h
175.031 202.750 m
175.031 204.854 175.291 206.567 175.812 207.890  c
176.239 209.005 176.875 209.562 177.718 209.562  c
178.125 209.562 178.544 209.380 178.976 209.015  c
179.408 208.651 179.739 208.041 179.968 207.187  c
180.312 205.906 180.484 204.093 180.484 201.750  c
180.484 200.010 180.302 198.562 179.937 197.406  c
179.666 196.541 179.317 195.927 178.890 195.562  c
178.588 195.322 178.218 195.203 177.781 195.203  c
177.270 195.203 176.817 195.432 176.421 195.890  c
175.880 196.505 175.513 197.479 175.320 198.812  c
175.127 200.145 175.031 201.458 175.031 202.750  c
h
186.375 207.828 m
186.729 207.828 187.026 207.947 187.265 208.187  c
187.505 208.427 187.625 208.718 187.625 209.062  c
187.625 209.406 187.502 209.700 187.257 209.945  c
187.013 210.190 186.718 210.312 186.375 210.312  c
186.031 210.312 185.737 210.190 185.492 209.945  c
185.247 209.700 185.125 209.406 185.125 209.062  c
185.125 208.718 185.247 208.427 185.492 208.187  c
185.737 207.947 186.031 207.828 186.375 207.828  c
h
190.078 202.468 m
190.078 200.739 190.341 199.247 190.867 197.992  c
191.393 196.737 192.088 195.802 192.953 195.187  c
193.630 194.697 194.328 194.453 195.046 194.453  c
196.213 194.453 197.260 195.052 198.187 196.250  c
199.354 197.718 199.937 199.713 199.937 202.234  c
199.937 204.005 199.682 205.507 199.171 206.742  c
198.661 207.976 198.010 208.872 197.218 209.429  c
196.427 209.987 195.666 210.265 194.937 210.265  c
193.479 210.265 192.270 209.411 191.312 207.703  c
190.489 206.255 190.078 204.510 190.078 202.468  c
h
192.281 202.750 m
192.281 204.854 192.541 206.567 193.062 207.890  c
193.489 209.005 194.125 209.562 194.968 209.562  c
195.375 209.562 195.794 209.380 196.226 209.015  c
196.658 208.651 196.989 208.041 197.218 207.187  c
197.562 205.906 197.734 204.093 197.734 201.750  c
197.734 200.010 197.552 198.562 197.187 197.406  c
196.916 196.541 196.567 195.927 196.140 195.562  c
195.838 195.322 195.468 195.203 195.031 195.203  c
194.520 195.203 194.067 195.432 193.671 195.890  c
193.130 196.505 192.763 197.479 192.570 198.812  c
192.377 200.145 192.281 201.458 192.281 202.750  c
h
201.578 202.468 m
201.578 200.739 201.841 199.247 202.367 197.992  c
202.893 196.737 203.588 195.802 204.453 195.187  c
205.130 194.697 205.828 194.453 206.546 194.453  c
207.713 194.453 208.760 195.052 209.687 196.250  c
210.854 197.718 211.437 199.713 211.437 202.234  c
211.437 204.005 211.182 205.507 210.671 206.742  c
210.161 207.976 209.510 208.872 208.718 209.429  c
207.927 209.987 207.166 210.265 206.437 210.265  c
204.979 210.265 203.770 209.411 202.812 207.703  c
201.989 206.255 201.578 204.510 201.578 202.468  c
h
203.781 202.750 m
203.781 204.854 204.041 206.567 204.562 207.890  c
204.989 209.005 205.625 209.562 206.468 209.562  c
206.875 209.562 207.294 209.380 207.726 209.015  c
208.158 208.651 208.489 208.041 208.718 207.187  c
209.062 205.906 209.234 204.093 209.234 201.750  c
209.234 200.010 209.052 198.562 208.687 197.406  c
208.416 196.541 208.067 195.927 207.640 195.562  c
207.338 195.322 206.968 195.203 206.531 195.203  c
206.020 195.203 205.567 195.432 205.171 195.890  c
204.630 196.505 204.263 197.479 204.070 198.812  c
203.877 200.145 203.781 201.458 203.781 202.750  c
h
222.796 207.062 m
221.734 210.000 l
212.750 210.000 l
212.750 209.578 l
215.385 207.171 217.242 205.205 218.320 203.679  c
219.398 202.153 219.937 200.755 219.937 199.484  c
219.937 198.526 219.643 197.734 219.054 197.109  c
218.466 196.484 217.760 196.171 216.937 196.171  c
216.187 196.171 215.515 196.390 214.921 196.828  c
214.328 197.265 213.885 197.911 213.593 198.765  c
213.187 198.765 l
213.375 197.380 213.854 196.315 214.625 195.570  c
215.395 194.825 216.364 194.453 217.531 194.453  c
218.760 194.453 219.789 194.851 220.617 195.648  c
221.445 196.445 221.859 197.380 221.859 198.453  c
221.859 199.224 221.682 199.994 221.328 200.765  c
220.776 201.984 219.875 203.270 218.625 204.625  c
216.760 206.656 215.599 207.880 215.140 208.296  c
219.109 208.296 l
219.921 208.296 220.489 208.268 220.812 208.210  c
221.135 208.153 221.429 208.033 221.695 207.851  c
221.960 207.669 222.187 207.406 222.375 207.062  c
222.796 207.062 l
h
f
Q
q
newpath
176.828 119.468 m
176.828 117.739 177.091 116.247 177.617 114.992  c
178.143 113.737 178.838 112.802 179.703 112.187  c
180.380 111.697 181.078 111.453 181.796 111.453  c
182.963 111.453 184.010 112.052 184.937 113.250  c
186.104 114.718 186.687 116.713 186.687 119.234  c
186.687 121.005 186.432 122.507 185.921 123.742  c
185.411 124.976 184.760 125.872 183.968 126.429  c
183.177 126.987 182.416 127.265 181.687 127.265  c
180.229 127.265 179.020 126.411 178.062 124.703  c
177.239 123.255 176.828 121.510 176.828 119.468  c
h
179.031 119.750 m
179.031 121.854 179.291 123.567 179.812 124.890  c
180.239 126.005 180.875 126.562 181.718 126.562  c
182.125 126.562 182.544 126.380 182.976 126.015  c
183.408 125.651 183.739 125.041 183.968 124.187  c
184.312 122.906 184.484 121.093 184.484 118.750  c
184.484 117.010 184.302 115.562 183.937 114.406  c
183.666 113.541 183.317 112.927 182.890 112.562  c
182.588 112.322 182.218 112.203 181.781 112.203  c
181.270 112.203 180.817 112.432 180.421 112.890  c
179.880 113.505 179.513 114.479 179.320 115.812  c
179.127 117.145 179.031 118.458 179.031 119.750  c
h
190.375 124.828 m
190.729 124.828 191.026 124.947 191.265 125.187  c
191.505 125.427 191.625 125.718 191.625 126.062  c
191.625 126.406 191.502 126.700 191.257 126.945  c
191.013 127.190 190.718 127.312 190.375 127.312  c
190.031 127.312 189.737 127.190 189.492 126.945  c
189.247 126.700 189.125 126.406 189.125 126.062  c
189.125 125.718 189.247 125.427 189.492 125.187  c
189.737 124.947 190.031 124.828 190.375 124.828  c
h
194.078 119.468 m
194.078 117.739 194.341 116.247 194.867 114.992  c
195.393 113.737 196.088 112.802 196.953 112.187  c
197.630 111.697 198.328 111.453 199.046 111.453  c
200.213 111.453 201.260 112.052 202.187 113.250  c
203.354 114.718 203.937 116.713 203.937 119.234  c
203.937 121.005 203.682 122.507 203.171 123.742  c
202.661 124.976 202.010 125.872 201.218 126.429  c
200.427 126.987 199.666 127.265 198.937 127.265  c
197.479 127.265 196.270 126.411 195.312 124.703  c
194.489 123.255 194.078 121.510 194.078 119.468  c
h
196.281 119.750 m
196.281 121.854 196.541 123.567 197.062 124.890  c
197.489 126.005 198.125 126.562 198.968 126.562  c
199.375 126.562 199.794 126.380 200.226 126.015  c
200.658 125.651 200.989 125.041 201.218 124.187  c
201.562 122.906 201.734 121.093 201.734 118.750  c
201.734 117.010 201.552 115.562 201.187 114.406  c
200.916 113.541 200.567 112.927 200.140 112.562  c
199.838 112.322 199.468 112.203 199.031 112.203  c
198.520 112.203 198.067 112.432 197.671 112.890  c
197.130 113.505 196.763 114.479 196.570 115.812  c
196.377 117.145 196.281 118.458 196.281 119.750  c
h
205.578 119.468 m
205.578 117.739 205.841 116.247 206.367 114.992  c
206.893 113.737 207.588 112.802 208.453 112.187  c
209.130 111.697 209.828 111.453 210.546 111.453  c
211.713 111.453 212.760 112.052 213.687 113.250  c
214.854 114.718 215.437 116.713 215.437 119.234  c
215.437 121.005 215.182 122.507 214.671 123.742  c
214.161 124.976 213.510 125.872 212.718 126.429  c
211.927 126.987 211.166 127.265 210.437 127.265  c
208.979 127.265 207.770 126.411 206.812 124.703  c
205.989 123.255 205.578 121.510 205.578 119.468  c
h
207.781 119.750 m
207.781 121.854 208.041 123.567 208.562 124.890  c
208.989 126.005 209.625 126.562 210.468 126.562  c
210.875 126.562 211.294 126.380 211.726 126.015  c
212.158 125.651 212.489 125.041 212.718 124.187  c
213.062 122.906 213.234 121.093 213.234 118.750  c
213.234 117.010 213.052 115.562 212.687 114.406  c
212.416 113.541 212.067 112.927 211.640 112.562  c
211.338 112.322 210.968 112.203 210.531 112.203  c
210.020 112.203 209.567 112.432 209.171 112.890  c
208.630 113.505 208.263 114.479 208.070 115.812  c
207.877 117.145 207.781 118.458 207.781 119.750  c
h
226.953 121.390 m
226.953 122.984 l
224.906 122.984 l
224.906 127.000 l
223.062 127.000 l
223.062 122.984 l
216.609 122.984 l
216.609 121.546 l
223.671 111.453 l
224.906 111.453 l
224.906 121.390 l
226.953 121.390 l
h
223.062 121.390 m
223.062 113.828 l
217.703 121.390 l
223.062 121.390 l
h
f
Q
Q
Q
Q
q
q
5.00000 w
Q
Q
Q
0 0 780 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
gsave
1 -1 scale
5 -395 translate
%!PS-Adobe-3.0 EPSF-3.0
%%Title: Plot3D
%%Creator: GL2PS 1.3.7, (C) 1999-2012 C. Geuzaine
%%For: Maplesoft
%%CreationDate: Fri May 22 16:41:58 2020
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%%Pages: 1
%%BoundingBox: 0 0 770 390
%%EndComments
%%BeginProlog
/gl2psdict 64 dict def gl2psdict begin
0 setlinecap 0 setlinejoin
/tryPS3shading true def % set to false to force subdivision
/rThreshold 0.064 def % red component subdivision threshold
/gThreshold 0.034 def % green component subdivision threshold
/bThreshold 0.1 def % blue component subdivision threshold
/BD { bind def } bind def
/C  { setrgbcolor } BD
/G  { 0.082 mul exch 0.6094 mul add exch 0.3086 mul add neg 1.0 add setgray } BD
/W  { setlinewidth } BD
/FC { findfont exch /SH exch def SH scalefont setfont } BD
/SW { dup stringwidth pop } BD
/S  { FC moveto show } BD
/SBC{ FC moveto SW -2 div 0 rmoveto show } BD
/SBR{ FC moveto SW neg 0 rmoveto show } BD
/SCL{ FC moveto 0 SH -2 div rmoveto show } BD
/SCC{ FC moveto SW -2 div SH -2 div rmoveto show } BD
/SCR{ FC moveto SW neg SH -2 div rmoveto show } BD
/STL{ FC moveto 0 SH neg rmoveto show } BD
/STC{ FC moveto SW -2 div SH neg rmoveto show } BD
/STR{ FC moveto SW neg SH neg rmoveto show } BD
/FCT { FC translate 0 0 } BD
/SR  { gsave FCT moveto rotate show grestore } BD
/SBCR{ gsave FCT moveto rotate SW -2 div 0 rmoveto show grestore } BD
/SBRR{ gsave FCT moveto rotate SW neg 0 rmoveto show grestore } BD
/SCLR{ gsave FCT moveto rotate 0 SH -2 div rmoveto show grestore} BD
/SCCR{ gsave FCT moveto rotate SW -2 div SH -2 div rmoveto show grestore} BD
/SCRR{ gsave FCT moveto rotate SW neg SH -2 div rmoveto show grestore} BD
/STLR{ gsave FCT moveto rotate 0 SH neg rmoveto show grestore } BD
/STCR{ gsave FCT moveto rotate SW -2 div SH neg rmoveto show grestore } BD
/STRR{ gsave FCT moveto rotate SW neg SH neg rmoveto show grestore } BD
/P  { newpath 0.0 360.0 arc closepath fill } BD
/LS { newpath moveto } BD
/L  { lineto } BD
/LE { lineto stroke } BD
/T  { newpath moveto lineto lineto closepath fill } BD
/STshfill {
      /b1 exch def /g1 exch def /r1 exch def /y1 exch def /x1 exch def
      /b2 exch def /g2 exch def /r2 exch def /y2 exch def /x2 exch def
      /b3 exch def /g3 exch def /r3 exch def /y3 exch def /x3 exch def
      gsave << /ShadingType 4 /ColorSpace [/DeviceRGB]
      /DataSource [ 0 x1 y1 r1 g1 b1 0 x2 y2 r2 g2 b2 0 x3 y3 r3 g3 b3 ] >>
      shfill grestore } BD
/Tm { 3 -1 roll 8 -1 roll 13 -1 roll add add 3 div
      3 -1 roll 7 -1 roll 11 -1 roll add add 3 div
      3 -1 roll 6 -1 roll 9 -1 roll add add 3 div C T } BD
/STsplit {
      4 index 15 index add 0.5 mul
      4 index 15 index add 0.5 mul
      4 index 15 index add 0.5 mul
      4 index 15 index add 0.5 mul
      4 index 15 index add 0.5 mul
      5 copy 5 copy 25 15 roll
      9 index 30 index add 0.5 mul
      9 index 30 index add 0.5 mul
      9 index 30 index add 0.5 mul
      9 index 30 index add 0.5 mul
      9 index 30 index add 0.5 mul
      5 copy 5 copy 35 5 roll 25 5 roll 15 5 roll
      4 index 10 index add 0.5 mul
      4 index 10 index add 0.5 mul
      4 index 10 index add 0.5 mul
      4 index 10 index add 0.5 mul
      4 index 10 index add 0.5 mul
      5 copy 5 copy 40 5 roll 25 5 roll 15 5 roll 25 5 roll
      STnoshfill STnoshfill STnoshfill STnoshfill } BD
/STnoshfill {
      2 index 8 index sub abs rThreshold gt
      { STsplit }
      { 1 index 7 index sub abs gThreshold gt
        { STsplit }
        { dup 6 index sub abs bThreshold gt
          { STsplit }
          { 2 index 13 index sub abs rThreshold gt
            { STsplit }
            { 1 index 12 index sub abs gThreshold gt
              { STsplit }
              { dup 11 index sub abs bThreshold gt
                { STsplit }
                { 7 index 13 index sub abs rThreshold gt
                  { STsplit }
                  { 6 index 12 index sub abs gThreshold gt
                    { STsplit }
                    { 5 index 11 index sub abs bThreshold gt
                      { STsplit }
                      { Tm }
                      ifelse }
                    ifelse }
                  ifelse }
                ifelse }
              ifelse }
            ifelse }
          ifelse }
        ifelse }
      ifelse } BD
tryPS3shading
{ /shfill where
  { /ST { STshfill } BD }
  { /ST { STnoshfill } BD }
  ifelse }
{ /ST { STnoshfill } BD }
ifelse
end
%%EndProlog
%%BeginSetup
/DeviceRGB setcolorspace
gl2psdict begin
%%EndSetup
%%BeginPageSetup
%%EndPageSetup
mark
gsave
1.0 1.0 scale
1 W
0 0 0 C
406.536 148.513 LS
415.351 356.278 LE
406.536 148.513 LS
415.351 356.278 LE
406.536 148.513 LS
415.351 356.278 LE
224.231 106.373 LS
406.536 148.513 LE
224.231 106.373 LS
406.536 148.513 LE
224.231 106.373 LS
406.536 148.513 LE
537.12 75.5034 LS
406.536 148.513 LE
537.12 75.5034 LS
406.536 148.513 LE
537.12 75.5034 LS
406.536 148.513 LE
224.231 106.373 LS
215.39 107.245 LE
224.231 106.373 LS
215.39 107.245 LE
224.231 106.373 LS
216.92 104.683 LE
224.231 106.373 LS
216.92 104.683 LE
232.755 314.595 LS
415.351 356.278 LE
232.755 314.595 LS
415.351 356.278 LE
227.637 189.576 LS
218.79 190.447 LE
227.637 189.576 LS
218.79 190.447 LE
224.231 106.373 LS
232.755 314.595 LE
224.231 106.373 LS
232.755 314.595 LE
546.19 283.859 LS
415.351 356.278 LE
546.19 283.859 LS
415.351 356.278 LE
537.12 75.5034 LS
542.362 72.5723 LE
537.12 75.5034 LS
542.362 72.5723 LE
231.048 272.893 LS
222.194 273.763 LE
231.048 272.893 LS
222.194 273.763 LE
354.519 33.0313 LS
224.231 106.373 LE
354.519 33.0313 LS
224.231 106.373 LE
537.12 75.5034 LS
546.19 283.859 LE
537.12 75.5034 LS
546.19 283.859 LE
289.263 69.7651 LS
281.946 68.0684 LE
289.263 69.7651 LS
281.946 68.0684 LE
354.519 33.0313 LS
537.12 75.5034 LE
354.519 33.0313 LS
537.12 75.5034 LE
445.936 54.2944 LS
451.172 51.3569 LE
445.936 54.2944 LS
451.172 51.3569 LE
363.297 241.847 LS
232.755 314.595 LE
363.297 241.847 LS
232.755 314.595 LE
354.519 33.0313 LS
347.196 31.3276 LE
354.519 33.0313 LS
347.196 31.3276 LE
354.519 33.0313 LS
359.75 30.0869 LE
354.519 33.0313 LS
359.75 30.0869 LE
363.297 241.847 LS
546.19 283.859 LE
363.297 241.847 LS
546.19 283.859 LE
354.519 33.0313 LS
363.297 241.847 LE
354.519 33.0313 LS
363.297 241.847 LE
354.519 33.0313 LS
363.297 241.847 LE
354.519 33.0313 LS
363.297 241.847 LE
grestore
showpage
cleartomark
%%PageTrailer
%%Trailer
end
%%EOF
grestore
