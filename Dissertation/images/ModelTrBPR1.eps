%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 22 Май 2020 г. 8:07:23 VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
q
1.00000 w
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
221 315 48 27 rc
newpath
225.296 326.718 m
230.140 326.718 l
230.140 327.125 l
229.838 327.125 229.625 327.177 229.500 327.281  c
229.375 327.385 229.312 327.526 229.312 327.703  c
229.312 327.880 229.442 328.156 229.703 328.531  c
229.786 328.656 229.911 328.843 230.078 329.093  c
230.812 330.265 l
231.656 329.093 l
232.187 328.354 232.453 327.885 232.453 327.687  c
232.453 327.531 232.390 327.398 232.265 327.289  c
232.140 327.179 231.937 327.125 231.656 327.125  c
231.656 326.718 l
235.125 326.718 l
235.125 327.125 l
234.760 327.145 234.442 327.250 234.171 327.437  c
233.807 327.687 233.307 328.239 232.671 329.093  c
231.265 330.968 l
233.828 334.656 l
234.453 335.562 234.901 336.106 235.171 336.289  c
235.442 336.471 235.791 336.572 236.218 336.593  c
236.218 337.000 l
231.375 337.000 l
231.375 336.593 l
231.708 336.593 231.968 336.520 232.156 336.375  c
232.302 336.270 232.375 336.130 232.375 335.953  c
232.375 335.786 232.135 335.354 231.656 334.656  c
230.140 332.453 l
228.500 334.656 l
227.989 335.333 227.734 335.734 227.734 335.859  c
227.734 336.046 227.817 336.213 227.984 336.359  c
228.151 336.505 228.401 336.583 228.734 336.593  c
228.734 337.000 l
225.375 337.000 l
225.375 336.593 l
225.645 336.562 225.885 336.468 226.093 336.312  c
226.375 336.093 226.854 335.541 227.531 334.656  c
229.687 331.781 l
227.734 328.953 l
227.171 328.151 226.739 327.645 226.437 327.437  c
226.135 327.229 225.755 327.125 225.296 327.125  c
225.296 326.718 l
h
237.734 340.828 m
237.734 340.328 l
238.505 340.078 239.101 339.684 239.523 339.148  c
239.945 338.612 240.156 338.046 240.156 337.453  c
240.156 337.307 240.125 337.187 240.062 337.093  c
240.010 337.020 239.958 336.984 239.906 336.984  c
239.822 336.984 239.640 337.062 239.359 337.218  c
239.224 337.281 239.083 337.312 238.937 337.312  c
238.572 337.312 238.281 337.203 238.062 336.984  c
237.843 336.765 237.734 336.468 237.734 336.093  c
237.734 335.729 237.875 335.414 238.156 335.148  c
238.437 334.882 238.781 334.750 239.187 334.750  c
239.677 334.750 240.114 334.966 240.500 335.398  c
240.885 335.830 241.078 336.401 241.078 337.109  c
241.078 337.880 240.809 338.596 240.273 339.257  c
239.737 339.919 238.890 340.442 237.734 340.828  c
h
251.781 328.593 m
252.520 327.843 252.958 327.416 253.093 327.312  c
253.437 327.020 253.802 326.796 254.187 326.640  c
254.572 326.484 254.958 326.406 255.343 326.406  c
255.989 326.406 256.544 326.593 257.007 326.968  c
257.471 327.343 257.781 327.885 257.937 328.593  c
258.708 327.697 259.359 327.109 259.890 326.828  c
260.421 326.546 260.968 326.406 261.531 326.406  c
262.083 326.406 262.570 326.546 262.992 326.828  c
263.414 327.109 263.750 327.567 264.000 328.203  c
264.156 328.640 264.234 329.322 264.234 330.250  c
264.234 334.671 l
264.234 335.317 264.286 335.760 264.390 336.000  c
264.463 336.166 264.601 336.307 264.804 336.421  c
265.007 336.536 265.338 336.593 265.796 336.593  c
265.796 337.000 l
260.718 337.000 l
260.718 336.593 l
260.921 336.593 l
261.369 336.593 261.713 336.510 261.953 336.343  c
262.130 336.218 262.255 336.026 262.328 335.765  c
262.359 335.640 262.375 335.276 262.375 334.671  c
262.375 330.250 l
262.375 329.416 262.276 328.822 262.078 328.468  c
261.786 327.989 261.317 327.750 260.671 327.750  c
260.276 327.750 259.877 327.851 259.476 328.054  c
259.075 328.257 258.588 328.625 258.015 329.156  c
258.000 329.281 l
258.015 329.765 l
258.015 334.671 l
258.015 335.380 258.054 335.820 258.132 335.992  c
258.210 336.164 258.359 336.307 258.578 336.421  c
258.796 336.536 259.166 336.593 259.687 336.593  c
259.687 337.000 l
254.484 337.000 l
254.484 336.593 l
255.057 336.593 255.450 336.526 255.664 336.390  c
255.877 336.255 256.026 336.052 256.109 335.781  c
256.151 335.656 256.171 335.286 256.171 334.671  c
256.171 330.250 l
256.171 329.416 256.046 328.812 255.796 328.437  c
255.463 327.958 255.000 327.718 254.406 327.718  c
254.010 327.718 253.614 327.828 253.218 328.046  c
252.593 328.380 252.114 328.750 251.781 329.156  c
251.781 334.671 l
251.781 335.349 251.825 335.789 251.914 335.992  c
252.002 336.195 252.140 336.346 252.328 336.445  c
252.515 336.544 252.890 336.593 253.453 336.593  c
253.453 337.000 l
248.359 337.000 l
248.359 336.593 l
248.828 336.593 249.156 336.544 249.343 336.445  c
249.531 336.346 249.674 336.184 249.773 335.960  c
249.872 335.737 249.921 335.307 249.921 334.671  c
249.921 330.750 l
249.921 329.614 249.885 328.880 249.812 328.546  c
249.760 328.307 249.679 328.140 249.570 328.046  c
249.460 327.953 249.307 327.906 249.109 327.906  c
248.901 327.906 248.651 327.963 248.359 328.078  c
248.187 327.671 l
251.296 326.406 l
251.781 326.406 l
251.781 328.593 l
h
f
Q
cliprestore
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
q
newpath
178.828 318.468 m
178.828 316.739 179.091 315.247 179.617 313.992  c
180.143 312.737 180.838 311.802 181.703 311.187  c
182.380 310.697 183.078 310.453 183.796 310.453  c
184.963 310.453 186.010 311.052 186.937 312.250  c
188.104 313.718 188.687 315.713 188.687 318.234  c
188.687 320.005 188.432 321.507 187.921 322.742  c
187.411 323.976 186.760 324.872 185.968 325.429  c
185.177 325.987 184.416 326.265 183.687 326.265  c
182.229 326.265 181.020 325.411 180.062 323.703  c
179.239 322.255 178.828 320.510 178.828 318.468  c
h
181.031 318.750 m
181.031 320.854 181.291 322.567 181.812 323.890  c
182.239 325.005 182.875 325.562 183.718 325.562  c
184.125 325.562 184.544 325.380 184.976 325.015  c
185.408 324.651 185.739 324.041 185.968 323.187  c
186.312 321.906 186.484 320.093 186.484 317.750  c
186.484 316.010 186.302 314.562 185.937 313.406  c
185.666 312.541 185.317 311.927 184.890 311.562  c
184.588 311.322 184.218 311.203 183.781 311.203  c
183.270 311.203 182.817 311.432 182.421 311.890  c
181.880 312.505 181.513 313.479 181.320 314.812  c
181.127 316.145 181.031 317.458 181.031 318.750  c
h
f
Q
q
newpath
224.828 302.468 m
224.828 300.739 225.091 299.247 225.617 297.992  c
226.143 296.737 226.838 295.802 227.703 295.187  c
228.380 294.697 229.078 294.453 229.796 294.453  c
230.963 294.453 232.010 295.052 232.937 296.250  c
234.104 297.718 234.687 299.713 234.687 302.234  c
234.687 304.005 234.432 305.507 233.921 306.742  c
233.411 307.976 232.760 308.872 231.968 309.429  c
231.177 309.987 230.416 310.265 229.687 310.265  c
228.229 310.265 227.020 309.411 226.062 307.703  c
225.239 306.255 224.828 304.510 224.828 302.468  c
h
227.031 302.750 m
227.031 304.854 227.291 306.567 227.812 307.890  c
228.239 309.005 228.875 309.562 229.718 309.562  c
230.125 309.562 230.544 309.380 230.976 309.015  c
231.408 308.651 231.739 308.041 231.968 307.187  c
232.312 305.906 232.484 304.093 232.484 301.750  c
232.484 300.010 232.302 298.562 231.937 297.406  c
231.666 296.541 231.317 295.927 230.890 295.562  c
230.588 295.322 230.218 295.203 229.781 295.203  c
229.270 295.203 228.817 295.432 228.421 295.890  c
227.880 296.505 227.513 297.479 227.320 298.812  c
227.127 300.145 227.031 301.458 227.031 302.750  c
h
238.375 307.828 m
238.729 307.828 239.026 307.947 239.265 308.187  c
239.505 308.427 239.625 308.718 239.625 309.062  c
239.625 309.406 239.502 309.700 239.257 309.945  c
239.013 310.190 238.718 310.312 238.375 310.312  c
238.031 310.312 237.737 310.190 237.492 309.945  c
237.247 309.700 237.125 309.406 237.125 309.062  c
237.125 308.718 237.247 308.427 237.492 308.187  c
237.737 307.947 238.031 307.828 238.375 307.828  c
h
243.953 296.265 m
247.656 294.453 l
248.015 294.453 l
248.015 307.312 l
248.015 308.166 248.052 308.697 248.125 308.906  c
248.197 309.114 248.346 309.276 248.570 309.390  c
248.794 309.505 249.250 309.567 249.937 309.578  c
249.937 310.000 l
244.218 310.000 l
244.218 309.578 l
244.937 309.567 245.401 309.507 245.609 309.398  c
245.817 309.289 245.963 309.143 246.046 308.960  c
246.130 308.778 246.171 308.229 246.171 307.312  c
246.171 299.093 l
246.171 297.989 246.135 297.281 246.062 296.968  c
246.010 296.729 245.914 296.552 245.773 296.437  c
245.632 296.322 245.463 296.265 245.265 296.265  c
244.994 296.265 244.609 296.380 244.109 296.609  c
243.953 296.265 l
h
f
Q
q
newpath
278.828 286.468 m
278.828 284.739 279.091 283.247 279.617 281.992  c
280.143 280.737 280.838 279.802 281.703 279.187  c
282.380 278.697 283.078 278.453 283.796 278.453  c
284.963 278.453 286.010 279.052 286.937 280.250  c
288.104 281.718 288.687 283.713 288.687 286.234  c
288.687 288.005 288.432 289.507 287.921 290.742  c
287.411 291.976 286.760 292.872 285.968 293.429  c
285.177 293.987 284.416 294.265 283.687 294.265  c
282.229 294.265 281.020 293.411 280.062 291.703  c
279.239 290.255 278.828 288.510 278.828 286.468  c
h
281.031 286.750 m
281.031 288.854 281.291 290.567 281.812 291.890  c
282.239 293.005 282.875 293.562 283.718 293.562  c
284.125 293.562 284.544 293.380 284.976 293.015  c
285.408 292.651 285.739 292.041 285.968 291.187  c
286.312 289.906 286.484 288.093 286.484 285.750  c
286.484 284.010 286.302 282.562 285.937 281.406  c
285.666 280.541 285.317 279.927 284.890 279.562  c
284.588 279.322 284.218 279.203 283.781 279.203  c
283.270 279.203 282.817 279.432 282.421 279.890  c
281.880 280.505 281.513 281.479 281.320 282.812  c
281.127 284.145 281.031 285.458 281.031 286.750  c
h
292.375 291.828 m
292.729 291.828 293.026 291.947 293.265 292.187  c
293.505 292.427 293.625 292.718 293.625 293.062  c
293.625 293.406 293.502 293.700 293.257 293.945  c
293.013 294.190 292.718 294.312 292.375 294.312  c
292.031 294.312 291.737 294.190 291.492 293.945  c
291.247 293.700 291.125 293.406 291.125 293.062  c
291.125 292.718 291.247 292.427 291.492 292.187  c
291.737 291.947 292.031 291.828 292.375 291.828  c
h
305.796 291.062 m
304.734 294.000 l
295.750 294.000 l
295.750 293.578 l
298.385 291.171 300.242 289.205 301.320 287.679  c
302.398 286.153 302.937 284.755 302.937 283.484  c
302.937 282.526 302.643 281.734 302.054 281.109  c
301.466 280.484 300.760 280.171 299.937 280.171  c
299.187 280.171 298.515 280.390 297.921 280.828  c
297.328 281.265 296.885 281.911 296.593 282.765  c
296.187 282.765 l
296.375 281.380 296.854 280.315 297.625 279.570  c
298.395 278.825 299.364 278.453 300.531 278.453  c
301.760 278.453 302.789 278.851 303.617 279.648  c
304.445 280.445 304.859 281.380 304.859 282.453  c
304.859 283.224 304.682 283.994 304.328 284.765  c
303.776 285.984 302.875 287.270 301.625 288.625  c
299.760 290.656 298.599 291.880 298.140 292.296  c
302.109 292.296 l
302.921 292.296 303.489 292.268 303.812 292.210  c
304.135 292.153 304.429 292.033 304.695 291.851  c
304.960 291.669 305.187 291.406 305.375 291.062  c
305.796 291.062 l
h
f
Q
Q
Q
q
1.00000 w
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
51 263 48 27 rc
newpath
55.1406 274.718 m
59.9375 274.718 l
59.9375 275.125 l
59.6875 275.125 l
59.3541 275.125 59.1041 275.197 58.9375 275.343  c
58.7708 275.489 58.6875 275.671 58.6875 275.890  c
58.6875 276.182 58.8072 276.588 59.0468 277.109  c
61.5625 282.296 l
63.8593 276.609 l
63.9843 276.307 64.0468 276.005 64.0468 275.703  c
64.0468 275.567 64.0208 275.463 63.9687 275.390  c
63.9166 275.317 63.8255 275.255 63.6953 275.203  c
63.5651 275.151 63.3385 275.125 63.0156 275.125  c
63.0156 274.718 l
66.3593 274.718 l
66.3593 275.125 l
66.0885 275.156 65.8776 275.216 65.7265 275.304  c
65.5755 275.393 65.4114 275.562 65.2343 275.812  c
65.1614 275.916 65.0312 276.203 64.8437 276.671  c
60.6562 286.937 l
60.2500 287.937 59.7213 288.692 59.0703 289.203  c
58.4192 289.713 57.7864 289.968 57.1718 289.968  c
56.7343 289.968 56.3724 289.841 56.0859 289.585  c
55.7994 289.330 55.6562 289.036 55.6562 288.703  c
55.6562 288.390 55.7604 288.138 55.9687 287.945  c
56.1770 287.752 56.4583 287.656 56.8125 287.656  c
57.0625 287.656 57.4010 287.739 57.8281 287.906  c
58.1302 288.020 58.3177 288.078 58.3906 288.078  c
58.6197 288.078 58.8671 287.960 59.1328 287.726  c
59.3984 287.492 59.6666 287.041 59.9375 286.375  c
60.6562 284.593 l
56.9687 276.828 l
56.8541 276.599 56.6718 276.312 56.4218 275.968  c
56.2343 275.708 56.0833 275.531 55.9687 275.437  c
55.7916 275.322 55.5156 275.218 55.1406 275.125  c
55.1406 274.718 l
h
67.7343 288.828 m
67.7343 288.328 l
68.5052 288.078 69.1015 287.684 69.5234 287.148  c
69.9453 286.612 70.1562 286.046 70.1562 285.453  c
70.1562 285.307 70.1250 285.187 70.0625 285.093  c
70.0104 285.020 69.9583 284.984 69.9062 284.984  c
69.8229 284.984 69.6406 285.062 69.3593 285.218  c
69.2239 285.281 69.0833 285.312 68.9375 285.312  c
68.5729 285.312 68.2812 285.203 68.0625 284.984  c
67.8437 284.765 67.7343 284.468 67.7343 284.093  c
67.7343 283.729 67.8750 283.414 68.1562 283.148  c
68.4375 282.882 68.7812 282.750 69.1875 282.750  c
69.6770 282.750 70.1145 282.966 70.5000 283.398  c
70.8854 283.830 71.0781 284.401 71.0781 285.109  c
71.0781 285.880 70.8099 286.596 70.2734 287.257  c
69.7369 287.919 68.8906 288.442 67.7343 288.828  c
h
81.7812 276.593 m
82.5208 275.843 82.9583 275.416 83.0937 275.312  c
83.4375 275.020 83.8020 274.796 84.1875 274.640  c
84.5729 274.484 84.9583 274.406 85.3437 274.406  c
85.9895 274.406 86.5442 274.593 87.0078 274.968  c
87.4713 275.343 87.7812 275.885 87.9375 276.593  c
88.7083 275.697 89.3593 275.109 89.8906 274.828  c
90.4218 274.546 90.9687 274.406 91.5312 274.406  c
92.0833 274.406 92.5703 274.546 92.9921 274.828  c
93.4140 275.109 93.7500 275.567 94.0000 276.203  c
94.1562 276.640 94.2343 277.322 94.2343 278.250  c
94.2343 282.671 l
94.2343 283.317 94.2864 283.760 94.3906 284.000  c
94.4635 284.166 94.6015 284.307 94.8046 284.421  c
95.0078 284.536 95.3385 284.593 95.7968 284.593  c
95.7968 285.000 l
90.7187 285.000 l
90.7187 284.593 l
90.9218 284.593 l
91.3697 284.593 91.7135 284.510 91.9531 284.343  c
92.1302 284.218 92.2552 284.026 92.3281 283.765  c
92.3593 283.640 92.3750 283.276 92.3750 282.671  c
92.3750 278.250 l
92.3750 277.416 92.2760 276.822 92.0781 276.468  c
91.7864 275.989 91.3177 275.750 90.6718 275.750  c
90.2760 275.750 89.8776 275.851 89.4765 276.054  c
89.0755 276.257 88.5885 276.625 88.0156 277.156  c
88.0000 277.281 l
88.0156 277.765 l
88.0156 282.671 l
88.0156 283.380 88.0546 283.820 88.1328 283.992  c
88.2109 284.164 88.3593 284.307 88.5781 284.421  c
88.7968 284.536 89.1666 284.593 89.6875 284.593  c
89.6875 285.000 l
84.4843 285.000 l
84.4843 284.593 l
85.0572 284.593 85.4505 284.526 85.6640 284.390  c
85.8776 284.255 86.0260 284.052 86.1093 283.781  c
86.1510 283.656 86.1718 283.286 86.1718 282.671  c
86.1718 278.250 l
86.1718 277.416 86.0468 276.812 85.7968 276.437  c
85.4635 275.958 85.0000 275.718 84.4062 275.718  c
84.0104 275.718 83.6145 275.828 83.2187 276.046  c
82.5937 276.380 82.1145 276.750 81.7812 277.156  c
81.7812 282.671 l
81.7812 283.349 81.8255 283.789 81.9140 283.992  c
82.0026 284.195 82.1406 284.346 82.3281 284.445  c
82.5156 284.544 82.8906 284.593 83.4531 284.593  c
83.4531 285.000 l
78.3593 285.000 l
78.3593 284.593 l
78.8281 284.593 79.1562 284.544 79.3437 284.445  c
79.5312 284.346 79.6744 284.184 79.7734 283.960  c
79.8724 283.737 79.9218 283.307 79.9218 282.671  c
79.9218 278.750 l
79.9218 277.614 79.8854 276.880 79.8125 276.546  c
79.7604 276.307 79.6796 276.140 79.5703 276.046  c
79.4609 275.953 79.3072 275.906 79.1093 275.906  c
78.9010 275.906 78.6510 275.963 78.3593 276.078  c
78.1875 275.671 l
81.2968 274.406 l
81.7812 274.406 l
81.7812 276.593 l
h
f
Q
cliprestore
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
q
newpath
167.828 305.468 m
167.828 303.739 168.091 302.247 168.617 300.992  c
169.143 299.737 169.838 298.802 170.703 298.187  c
171.380 297.697 172.078 297.453 172.796 297.453  c
173.963 297.453 175.010 298.052 175.937 299.250  c
177.104 300.718 177.687 302.713 177.687 305.234  c
177.687 307.005 177.432 308.507 176.921 309.742  c
176.411 310.976 175.760 311.872 174.968 312.429  c
174.177 312.987 173.416 313.265 172.687 313.265  c
171.229 313.265 170.020 312.411 169.062 310.703  c
168.239 309.255 167.828 307.510 167.828 305.468  c
h
170.031 305.750 m
170.031 307.854 170.291 309.567 170.812 310.890  c
171.239 312.005 171.875 312.562 172.718 312.562  c
173.125 312.562 173.544 312.380 173.976 312.015  c
174.408 311.651 174.739 311.041 174.968 310.187  c
175.312 308.906 175.484 307.093 175.484 304.750  c
175.484 303.010 175.302 301.562 174.937 300.406  c
174.666 299.541 174.317 298.927 173.890 298.562  c
173.588 298.322 173.218 298.203 172.781 298.203  c
172.270 298.203 171.817 298.432 171.421 298.890  c
170.880 299.505 170.513 300.479 170.320 301.812  c
170.127 303.145 170.031 304.458 170.031 305.750  c
h
f
Q
q
newpath
111.828 272.468 m
111.828 270.739 112.091 269.247 112.617 267.992  c
113.143 266.737 113.838 265.802 114.703 265.187  c
115.380 264.697 116.078 264.453 116.796 264.453  c
117.963 264.453 119.010 265.052 119.937 266.250  c
121.104 267.718 121.687 269.713 121.687 272.234  c
121.687 274.005 121.432 275.507 120.921 276.742  c
120.411 277.976 119.760 278.872 118.968 279.429  c
118.177 279.987 117.416 280.265 116.687 280.265  c
115.229 280.265 114.020 279.411 113.062 277.703  c
112.239 276.255 111.828 274.510 111.828 272.468  c
h
114.031 272.750 m
114.031 274.854 114.291 276.567 114.812 277.890  c
115.239 279.005 115.875 279.562 116.718 279.562  c
117.125 279.562 117.544 279.380 117.976 279.015  c
118.408 278.651 118.739 278.041 118.968 277.187  c
119.312 275.906 119.484 274.093 119.484 271.750  c
119.484 270.010 119.302 268.562 118.937 267.406  c
118.666 266.541 118.317 265.927 117.890 265.562  c
117.588 265.322 117.218 265.203 116.781 265.203  c
116.270 265.203 115.817 265.432 115.421 265.890  c
114.880 266.505 114.513 267.479 114.320 268.812  c
114.127 270.145 114.031 271.458 114.031 272.750  c
h
125.375 277.828 m
125.729 277.828 126.026 277.947 126.265 278.187  c
126.505 278.427 126.625 278.718 126.625 279.062  c
126.625 279.406 126.502 279.700 126.257 279.945  c
126.013 280.190 125.718 280.312 125.375 280.312  c
125.031 280.312 124.737 280.190 124.492 279.945  c
124.247 279.700 124.125 279.406 124.125 279.062  c
124.125 278.718 124.247 278.427 124.492 278.187  c
124.737 277.947 125.031 277.828 125.375 277.828  c
h
138.234 264.765 m
137.359 266.687 l
132.781 266.687 l
131.781 268.718 l
133.760 269.010 135.333 269.750 136.500 270.937  c
137.489 271.958 137.984 273.156 137.984 274.531  c
137.984 275.333 137.822 276.075 137.500 276.757  c
137.177 277.440 136.768 278.020 136.273 278.500  c
135.778 278.979 135.229 279.364 134.625 279.656  c
133.760 280.062 132.875 280.265 131.968 280.265  c
131.052 280.265 130.385 280.112 129.968 279.804  c
129.552 279.497 129.343 279.156 129.343 278.781  c
129.343 278.572 129.432 278.388 129.609 278.226  c
129.786 278.065 130.005 277.984 130.265 277.984  c
130.453 277.984 130.619 278.013 130.765 278.070  c
130.911 278.127 131.161 278.281 131.515 278.531  c
132.078 278.916 132.645 279.109 133.218 279.109  c
134.104 279.109 134.877 278.778 135.539 278.117  c
136.200 277.455 136.531 276.651 136.531 275.703  c
136.531 274.776 136.234 273.914 135.640 273.117  c
135.046 272.320 134.229 271.708 133.187 271.281  c
132.375 270.937 131.265 270.739 129.859 270.687  c
132.781 264.765 l
138.234 264.765 l
h
f
Q
q
newpath
92.7031 232.265 m
96.4062 230.453 l
96.7656 230.453 l
96.7656 243.312 l
96.7656 244.166 96.8020 244.697 96.8750 244.906  c
96.9479 245.114 97.0963 245.276 97.3203 245.390  c
97.5442 245.505 98.0000 245.567 98.6875 245.578  c
98.6875 246.000 l
92.9687 246.000 l
92.9687 245.578 l
93.6875 245.567 94.1510 245.507 94.3593 245.398  c
94.5677 245.289 94.7135 245.143 94.7968 244.960  c
94.8802 244.778 94.9218 244.229 94.9218 243.312  c
94.9218 235.093 l
94.9218 233.989 94.8854 233.281 94.8125 232.968  c
94.7604 232.729 94.6640 232.552 94.5234 232.437  c
94.3828 232.322 94.2135 232.265 94.0156 232.265  c
93.7447 232.265 93.3593 232.380 92.8593 232.609  c
92.7031 232.265 l
h
f
Q
Q
Q
q
1.00000 w
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
13 139 47 27 rc
newpath
26.6562 157.843 m
26.5312 161.000 l
17.4531 161.000 l
17.4531 160.593 l
24.2812 151.500 l
20.9218 151.500 l
20.1927 151.500 19.7161 151.546 19.4921 151.640  c
19.2682 151.734 19.0833 151.911 18.9375 152.171  c
18.7395 152.546 18.6250 153.010 18.5937 153.562  c
18.1406 153.562 l
18.2187 150.718 l
26.8437 150.718 l
26.8437 151.125 l
19.9375 160.250 l
23.6875 160.250 l
24.4791 160.250 25.0156 160.184 25.2968 160.054  c
25.5781 159.924 25.8020 159.692 25.9687 159.359  c
26.0937 159.119 26.1979 158.614 26.2812 157.843  c
26.6562 157.843 l
h
28.4428 164.828 m
28.4428 164.328 l
29.2137 164.078 29.8100 163.684 30.2319 163.148  c
30.6538 162.612 30.8647 162.046 30.8647 161.453  c
30.8647 161.307 30.8335 161.187 30.7710 161.093  c
30.7189 161.020 30.6668 160.984 30.6147 160.984  c
30.5314 160.984 30.3491 161.062 30.0678 161.218  c
29.9324 161.281 29.7918 161.312 29.6460 161.312  c
29.2814 161.312 28.9897 161.203 28.7710 160.984  c
28.5522 160.765 28.4428 160.468 28.4428 160.093  c
28.4428 159.729 28.5835 159.414 28.8647 159.148  c
29.1460 158.882 29.4897 158.750 29.8960 158.750  c
30.3855 158.750 30.8230 158.966 31.2085 159.398  c
31.5939 159.830 31.7866 160.401 31.7866 161.109  c
31.7866 161.880 31.5183 162.596 30.9819 163.257  c
30.4454 163.919 29.5991 164.442 28.4428 164.828  c
h
42.4897 152.593 m
43.2293 151.843 43.6668 151.416 43.8022 151.312  c
44.1460 151.020 44.5105 150.796 44.8960 150.640  c
45.2814 150.484 45.6668 150.406 46.0522 150.406  c
46.6980 150.406 47.2527 150.593 47.7163 150.968  c
48.1798 151.343 48.4897 151.885 48.6460 152.593  c
49.4168 151.697 50.0678 151.109 50.5991 150.828  c
51.1303 150.546 51.6772 150.406 52.2397 150.406  c
52.7918 150.406 53.2788 150.546 53.7006 150.828  c
54.1225 151.109 54.4585 151.567 54.7085 152.203  c
54.8647 152.640 54.9428 153.322 54.9428 154.250  c
54.9428 158.671 l
54.9428 159.317 54.9949 159.760 55.0991 160.000  c
55.1720 160.166 55.3100 160.307 55.5131 160.421  c
55.7163 160.536 56.0470 160.593 56.5053 160.593  c
56.5053 161.000 l
51.4272 161.000 l
51.4272 160.593 l
51.6303 160.593 l
52.0782 160.593 52.4220 160.510 52.6616 160.343  c
52.8387 160.218 52.9637 160.026 53.0366 159.765  c
53.0678 159.640 53.0835 159.276 53.0835 158.671  c
53.0835 154.250 l
53.0835 153.416 52.9845 152.822 52.7866 152.468  c
52.4949 151.989 52.0262 151.750 51.3803 151.750  c
50.9845 151.750 50.5861 151.851 50.1850 152.054  c
49.7840 152.257 49.2970 152.625 48.7241 153.156  c
48.7085 153.281 l
48.7241 153.765 l
48.7241 158.671 l
48.7241 159.380 48.7631 159.820 48.8413 159.992  c
48.9194 160.164 49.0678 160.307 49.2866 160.421  c
49.5053 160.536 49.8751 160.593 50.3960 160.593  c
50.3960 161.000 l
45.1928 161.000 l
45.1928 160.593 l
45.7657 160.593 46.1590 160.526 46.3725 160.390  c
46.5861 160.255 46.7345 160.052 46.8178 159.781  c
46.8595 159.656 46.8803 159.286 46.8803 158.671  c
46.8803 154.250 l
46.8803 153.416 46.7553 152.812 46.5053 152.437  c
46.1720 151.958 45.7085 151.718 45.1147 151.718  c
44.7189 151.718 44.3230 151.828 43.9272 152.046  c
43.3022 152.380 42.8230 152.750 42.4897 153.156  c
42.4897 158.671 l
42.4897 159.349 42.5340 159.789 42.6225 159.992  c
42.7111 160.195 42.8491 160.346 43.0366 160.445  c
43.2241 160.544 43.5991 160.593 44.1616 160.593  c
44.1616 161.000 l
39.0678 161.000 l
39.0678 160.593 l
39.5366 160.593 39.8647 160.544 40.0522 160.445  c
40.2397 160.346 40.3829 160.184 40.4819 159.960  c
40.5808 159.737 40.6303 159.307 40.6303 158.671  c
40.6303 154.750 l
40.6303 153.614 40.5939 152.880 40.5210 152.546  c
40.4689 152.307 40.3881 152.140 40.2788 152.046  c
40.1694 151.953 40.0157 151.906 39.8178 151.906  c
39.6095 151.906 39.3595 151.963 39.0678 152.078  c
38.8960 151.671 l
42.0053 150.406 l
42.4897 150.406 l
42.4897 152.593 l
h
f
Q
cliprestore
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
q
Q
q
newpath
72.8281 162.468 m
72.8281 160.739 73.0911 159.247 73.6171 157.992  c
74.1432 156.737 74.8385 155.802 75.7031 155.187  c
76.3802 154.697 77.0781 154.453 77.7968 154.453  c
78.9635 154.453 80.0104 155.052 80.9375 156.250  c
82.1041 157.718 82.6875 159.713 82.6875 162.234  c
82.6875 164.005 82.4322 165.507 81.9218 166.742  c
81.4114 167.976 80.7604 168.872 79.9687 169.429  c
79.1770 169.987 78.4166 170.265 77.6875 170.265  c
76.2291 170.265 75.0208 169.411 74.0625 167.703  c
73.2395 166.255 72.8281 164.510 72.8281 162.468  c
h
75.0312 162.750 m
75.0312 164.854 75.2916 166.567 75.8125 167.890  c
76.2395 169.005 76.8750 169.562 77.7187 169.562  c
78.1250 169.562 78.5442 169.380 78.9765 169.015  c
79.4088 168.651 79.7395 168.041 79.9687 167.187  c
80.3125 165.906 80.4843 164.093 80.4843 161.750  c
80.4843 160.010 80.3020 158.562 79.9375 157.406  c
79.6666 156.541 79.3177 155.927 78.8906 155.562  c
78.5885 155.322 78.2187 155.203 77.7812 155.203  c
77.2708 155.203 76.8177 155.432 76.4218 155.890  c
75.8802 156.505 75.5130 157.479 75.3203 158.812  c
75.1276 160.145 75.0312 161.458 75.0312 162.750  c
h
86.3750 167.828 m
86.7291 167.828 87.0260 167.947 87.2656 168.187  c
87.5052 168.427 87.6250 168.718 87.6250 169.062  c
87.6250 169.406 87.5026 169.700 87.2578 169.945  c
87.0130 170.190 86.7187 170.312 86.3750 170.312  c
86.0312 170.312 85.7369 170.190 85.4921 169.945  c
85.2474 169.700 85.1250 169.406 85.1250 169.062  c
85.1250 168.718 85.2474 168.427 85.4921 168.187  c
85.7369 167.947 86.0312 167.828 86.3750 167.828  c
h
99.2343 154.765 m
98.3593 156.687 l
93.7812 156.687 l
92.7812 158.718 l
94.7604 159.010 96.3333 159.750 97.5000 160.937  c
98.4895 161.958 98.9843 163.156 98.9843 164.531  c
98.9843 165.333 98.8229 166.075 98.5000 166.757  c
98.1770 167.440 97.7682 168.020 97.2734 168.500  c
96.7786 168.979 96.2291 169.364 95.6250 169.656  c
94.7604 170.062 93.8750 170.265 92.9687 170.265  c
92.0520 170.265 91.3854 170.112 90.9687 169.804  c
90.5520 169.497 90.3437 169.156 90.3437 168.781  c
90.3437 168.572 90.4322 168.388 90.6093 168.226  c
90.7864 168.065 91.0052 167.984 91.2656 167.984  c
91.4531 167.984 91.6197 168.013 91.7656 168.070  c
91.9114 168.127 92.1614 168.281 92.5156 168.531  c
93.0781 168.916 93.6458 169.109 94.2187 169.109  c
95.1041 169.109 95.8776 168.778 96.5390 168.117  c
97.2005 167.455 97.5312 166.651 97.5312 165.703  c
97.5312 164.776 97.2343 163.914 96.6406 163.117  c
96.0468 162.320 95.2291 161.708 94.1875 161.281  c
93.3750 160.937 92.2656 160.739 90.8593 160.687  c
93.7812 154.765 l
99.2343 154.765 l
h
f
Q
q
newpath
91.7031 89.2656 m
95.4062 87.4531 l
95.7656 87.4531 l
95.7656 100.312 l
95.7656 101.166 95.8020 101.697 95.8750 101.906  c
95.9479 102.114 96.0963 102.276 96.3203 102.390  c
96.5442 102.505 97.0000 102.567 97.6875 102.578  c
97.6875 103.000 l
91.9687 103.000 l
91.9687 102.578 l
92.6875 102.567 93.1510 102.507 93.3593 102.398  c
93.5677 102.289 93.7135 102.143 93.7968 101.960  c
93.8802 101.778 93.9218 101.229 93.9218 100.312  c
93.9218 92.0937 l
93.9218 90.9895 93.8854 90.2812 93.8125 89.9687  c
93.7604 89.7291 93.6640 89.5520 93.5234 89.4375  c
93.3828 89.3229 93.2135 89.2656 93.0156 89.2656  c
92.7447 89.2656 92.3593 89.3802 91.8593 89.6093  c
91.7031 89.2656 l
h
f
Q
Q
Q
Q
q
q
5.00000 w
Q
Q
Q
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
gsave
1 -1 scale
5 -395 translate
%!PS-Adobe-3.0 EPSF-3.0
%%Title: Plot3D
%%Creator: GL2PS 1.3.7, (C) 1999-2012 C. Geuzaine
%%For: Maplesoft
%%CreationDate: Fri May 22 16:37:23 2020
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%%Pages: 1
%%BoundingBox: 0 0 390 390
%%EndComments
%%BeginProlog
/gl2psdict 64 dict def gl2psdict begin
0 setlinecap 0 setlinejoin
/tryPS3shading true def % set to false to force subdivision
/rThreshold 0.064 def % red component subdivision threshold
/gThreshold 0.034 def % green component subdivision threshold
/bThreshold 0.1 def % blue component subdivision threshold
/BD { bind def } bind def
/C  { setrgbcolor } BD
/G  { 0.082 mul exch 0.6094 mul add exch 0.3086 mul add neg 1.0 add setgray } BD
/W  { setlinewidth } BD
/FC { findfont exch /SH exch def SH scalefont setfont } BD
/SW { dup stringwidth pop } BD
/S  { FC moveto show } BD
/SBC{ FC moveto SW -2 div 0 rmoveto show } BD
/SBR{ FC moveto SW neg 0 rmoveto show } BD
/SCL{ FC moveto 0 SH -2 div rmoveto show } BD
/SCC{ FC moveto SW -2 div SH -2 div rmoveto show } BD
/SCR{ FC moveto SW neg SH -2 div rmoveto show } BD
/STL{ FC moveto 0 SH neg rmoveto show } BD
/STC{ FC moveto SW -2 div SH neg rmoveto show } BD
/STR{ FC moveto SW neg SH neg rmoveto show } BD
/FCT { FC translate 0 0 } BD
/SR  { gsave FCT moveto rotate show grestore } BD
/SBCR{ gsave FCT moveto rotate SW -2 div 0 rmoveto show grestore } BD
/SBRR{ gsave FCT moveto rotate SW neg 0 rmoveto show grestore } BD
/SCLR{ gsave FCT moveto rotate 0 SH -2 div rmoveto show grestore} BD
/SCCR{ gsave FCT moveto rotate SW -2 div SH -2 div rmoveto show grestore} BD
/SCRR{ gsave FCT moveto rotate SW neg SH -2 div rmoveto show grestore} BD
/STLR{ gsave FCT moveto rotate 0 SH neg rmoveto show grestore } BD
/STCR{ gsave FCT moveto rotate SW -2 div SH neg rmoveto show grestore } BD
/STRR{ gsave FCT moveto rotate SW neg SH neg rmoveto show grestore } BD
/P  { newpath 0.0 360.0 arc closepath fill } BD
/LS { newpath moveto } BD
/L  { lineto } BD
/LE { lineto stroke } BD
/T  { newpath moveto lineto lineto closepath fill } BD
/STshfill {
      /b1 exch def /g1 exch def /r1 exch def /y1 exch def /x1 exch def
      /b2 exch def /g2 exch def /r2 exch def /y2 exch def /x2 exch def
      /b3 exch def /g3 exch def /r3 exch def /y3 exch def /x3 exch def
      gsave << /ShadingType 4 /ColorSpace [/DeviceRGB]
      /DataSource [ 0 x1 y1 r1 g1 b1 0 x2 y2 r2 g2 b2 0 x3 y3 r3 g3 b3 ] >>
      shfill grestore } BD
/Tm { 3 -1 roll 8 -1 roll 13 -1 roll add add 3 div
      3 -1 roll 7 -1 roll 11 -1 roll add add 3 div
      3 -1 roll 6 -1 roll 9 -1 roll add add 3 div C T } BD
/STsplit {
      4 index 15 index add 0.5 mul
      4 index 15 index add 0.5 mul
      4 index 15 index add 0.5 mul
      4 index 15 index add 0.5 mul
      4 index 15 index add 0.5 mul
      5 copy 5 copy 25 15 roll
      9 index 30 index add 0.5 mul
      9 index 30 index add 0.5 mul
      9 index 30 index add 0.5 mul
      9 index 30 index add 0.5 mul
      9 index 30 index add 0.5 mul
      5 copy 5 copy 35 5 roll 25 5 roll 15 5 roll
      4 index 10 index add 0.5 mul
      4 index 10 index add 0.5 mul
      4 index 10 index add 0.5 mul
      4 index 10 index add 0.5 mul
      4 index 10 index add 0.5 mul
      5 copy 5 copy 40 5 roll 25 5 roll 15 5 roll 25 5 roll
      STnoshfill STnoshfill STnoshfill STnoshfill } BD
/STnoshfill {
      2 index 8 index sub abs rThreshold gt
      { STsplit }
      { 1 index 7 index sub abs gThreshold gt
        { STsplit }
        { dup 6 index sub abs bThreshold gt
          { STsplit }
          { 2 index 13 index sub abs rThreshold gt
            { STsplit }
            { 1 index 12 index sub abs gThreshold gt
              { STsplit }
              { dup 11 index sub abs bThreshold gt
                { STsplit }
                { 7 index 13 index sub abs rThreshold gt
                  { STsplit }
                  { 6 index 12 index sub abs gThreshold gt
                    { STsplit }
                    { 5 index 11 index sub abs bThreshold gt
                      { STsplit }
                      { Tm }
                      ifelse }
                    ifelse }
                  ifelse }
                ifelse }
              ifelse }
            ifelse }
          ifelse }
        ifelse }
      ifelse } BD
tryPS3shading
{ /shfill where
  { /ST { STshfill } BD }
  { /ST { STnoshfill } BD }
  ifelse }
{ /ST { STnoshfill } BD }
ifelse
end
%%EndProlog
%%BeginSetup
/DeviceRGB setcolorspace
gl2psdict begin
%%EndSetup
%%BeginPageSetup
%%EndPageSetup
mark
gsave
1.0 1.0 scale
1 W
0 0 0 C
101.608 164.247 LS
235.13 202.796 LE
101.608 164.247 LS
235.13 202.796 LE
101.608 164.247 LS
235.13 202.796 L
235.193 336.414 LE
235.13 202.796 LS
235.193 336.414 LE
235.13 202.796 LS
235.193 336.414 LE
312.424 135.959 LS
235.13 202.796 LE
312.424 135.959 LS
235.13 202.796 LE
312.424 135.959 LS
235.13 202.796 LE
101.608 164.247 LS
95.6514 165.045 LE
101.608 164.247 LS
95.6514 165.045 LE
101.608 164.247 LS
96.2593 162.702 LE
101.608 164.247 LS
96.2593 162.702 LE
101.534 231.063 LS
95.5728 231.861 LE
101.534 231.063 LS
95.5728 231.861 LE
101.608 164.247 LS
101.459 297.987 LE
101.608 164.247 LS
101.459 297.987 L
235.193 336.414 LE
101.459 297.987 LS
235.193 336.414 LE
178.69 97.2256 LS
101.608 164.247 LE
178.69 97.2256 LS
101.608 164.247 LE
140.103 130.776 LS
134.75 129.228 LE
140.103 130.776 LS
134.75 129.228 LE
287.888 128.853 LS
287.882 123.507 LE
287.888 128.853 LS
287.882 123.507 LE
312.61 269.789 LS
235.193 336.414 LE
312.61 269.789 LS
235.193 336.414 LE
101.459 297.987 LS
95.4937 298.783 LE
101.459 297.987 LS
95.4937 298.783 LE
178.69 97.2256 LS
312.424 135.959 LE
178.69 97.2256 LS
312.424 135.959 LE
178.69 97.2256 LS
312.424 135.959 LE
178.69 97.2256 LS
312.424 135.959 LE
233.319 113.048 LS
233.317 107.701 LE
233.319 113.048 LS
233.317 107.701 LE
312.424 135.959 LS
312.61 269.789 LE
312.424 135.959 LS
312.61 269.789 LE
178.69 97.2256 LS
178.691 91.876 LE
178.69 97.2256 LS
178.691 91.876 LE
178.69 97.2256 LS
173.333 95.6738 LE
178.69 97.2256 LS
173.333 95.6738 LE
178.664 231.178 LS
101.459 297.987 LE
178.664 231.178 LS
101.459 297.987 LE
178.69 97.2256 LS
178.664 231.178 LE
178.69 97.2256 LS
178.664 231.178 L
312.61 269.789 LE
178.664 231.178 LS
312.61 269.789 LE
grestore
showpage
cleartomark
%%PageTrailer
%%Trailer
end
%%EOF
grestore
